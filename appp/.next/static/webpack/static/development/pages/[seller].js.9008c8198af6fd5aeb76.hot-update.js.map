{"version":3,"file":"static/webpack/static/development/pages/[seller].js.9008c8198af6fd5aeb76.hot-update.js","sources":["webpack:///./pages/[seller]/index.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n\nimport {\n  Input,\n  Container,\n  Row,\n  Col,\n  Collapse,\n  Button,\n  CardBody,\n  Card,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardSubtitle\n} from \"reactstrap\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"https://ad.loaloa.me/admin/api\" }),\n  cache: new InMemoryCache()\n});\nfunction HomePage() {\n  const router = useRouter();\n  const { seller } = router.query;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <>\n      <Container>\n        <Input\n          style={{ marginTop: \"1rem\", width: \"100%\", borderRadius: \"7px\" }}\n        ></Input>\n        <Button\n          outline\n          color=\"primary\"\n          onClick={toggle}\n          style={{\n            marginTop: \"1rem\",\n            width: \"100%\"\n          }}\n        >\n          Danh mục\n        </Button>\n        <Collapse isOpen={isOpen} style={{ marginTop: \"1rem\" }}>\n          <Card>\n            <CardBody>\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\n              ea proident.\n            </CardBody>\n          </Card>\n        </Collapse>\n        <ApolloProvider client={client}>\n          <KeystoneProvider>\n            <Query\n              query={gql`\n                query {\n                  allProducts(first: 12) {\n                    price\n                  }\n                }\n              `}\n            >\n              {({ data }) => {\n                if (data) {\n                  var result = data.allProducts.map(product => (\n                    <Col\n                      xs={{ size: \"4\", offset: \"1\" }}\n                      style={{ marginTop: \"7px\" }}\n                    >\n                      <Link href=\"/123\">\n                        <a>\n                          <Card>\n                            {/* <CardImg\n                    top\n                    width=\"100%\"\n                    src=\"/assets/318x180.svg\"\n                    alt=\"Card image cap\"\n                  /> */}\n                            <CardBody style={{ padding: \"7px\" }}>\n                              <CardTitle>Tên sản phẩm</CardTitle>\n                              <CardSubtitle>1.000.000</CardSubtitle>\n                            </CardBody>\n                          </Card>\n                        </a>\n                      </Link>\n                    </Col>\n                  ));\n                }\n                return <Row>{result}</Row>;\n              }}\n            </Query>\n          </KeystoneProvider>\n        </ApolloProvider>\n        <Row style={{ marginTop: \"1rem\" }}>\n          <Col xs=\"4\">\n            <Link href=\"/123\">\n              <a>\n                <Card>\n                  {/* <CardImg\n                top\n                width=\"100%\"\n                src=\"/assets/318x180.svg\"\n                alt=\"Card image cap\"\n              /> */}\n                  <CardBody style={{ padding: \"7px\" }}>\n                    <CardTitle>Tên sản phẩm</CardTitle>\n                    <CardSubtitle>1.000.000</CardSubtitle>\n                  </CardBody>\n                </Card>\n              </a>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default HomePage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAFA;AACA;AAGA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAuBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/index.js.c2818d2726be8ec75b3a.hot-update.js","sources":["webpack:///./components/customers.js","webpack:///./components/getCustomer.js","webpack:///./pages/index.js"],"sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst query = gql`\n  query($limit: Int) {\n    allCustomers(first: $limit) {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function CustomerItem() {\n  const classes = useStyles();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allCustomers = data?.allCustomers;\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Tìm tên\"\n              />\n            </TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Tìm ĐT\"\n              />\n            </TableCell>\n            <TableCell>Địa chỉ</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allCustomers?.length\n            ? allCustomers.map((customer) => (\n                <TableRow key={customer.id} hover onClick={() => {}}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {customer.name}\n                  </TableCell>\n                  <TableCell>{customer.phone}</TableCell>\n                  <TableCell>{customer.address}</TableCell>\n                </TableRow>\n              ))\n            : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Button,\n} from \"@material-ui/core\";\n//import Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Customers from \"./customers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function CustomerItem() {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" fullWidth>\n            Ghi vào hóa đơn\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Customers />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import WorkFrame from \"../components/workFrame\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Orders from \"../components/orders\";\nimport CreateOrder from \"../components/createOrder\";\nimport GetProduct from \"../components/getProduct\";\nimport GetCustomer from \"../components/getCustomer\";\n\nimport { Grid } from \"@material-ui/core\";\nexport default function Index() {\n  return (\n    <WorkFrame>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={6} lg={4}>\n          <GetCustomer />\n          <GetProduct />\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <CreateOrder />\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Orders />\n        </Grid>\n      </Grid>\n    </WorkFrame>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAccA;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AAeA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/index.js.0769239024787eb58918.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {\n  Paper,\n  Stepper,\n  StepLabel,\n  Typography,\n  Link,\n  Step,\n  Button,\n} from \"@material-ui/core\";\nimport Customer from \"./Customer\";\nimport OrderItem from \"./orderItem\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { useState } from \"react\";\nconst steps = [\"Đặt\", \"Xử lí\", \"Giao\", \"Thanh toán\"];\nconst updateStepQuery = gql`\n  mutation($id: ID!, $step: Int) {\n    updateOrder(id: $id, data: { step: $step }) {\n      id\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  btn: { marginTop: theme.spacing(2) },\n}));\nexport default function Order({ order, nextStep }) {\n  const classes = useStyles();\n  const [updateStep] = useMutation(updateStepQuery);\n  const [errorMsg, setErrorMsg] = useState();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  async function handleNext({ id, step }) {\n    try {\n      const { data } = await updateStep({ variables: { id, step } });\n      nextStep();\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n  return (\n    <Paper className={classes.root}>\n      <Stepper activeStep={order?.step} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Typography variant=\"body1\">Đơn:</Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        Cập nhật lúc:{\" \"}\n        <Link color=\"primary\">\n          {new Date(order?.time).toLocaleString(\"tr-TR\")}\n        </Link>\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        Id: <Link color=\"primary\">#{order?.id}</Link>\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        Tổng: <Link color=\"primary\">{formatMoney(order?.total, 0)}</Link>\n      </Typography>\n      <Customer customer={order?.customer} />\n      <OrderItem items={order?.items} />\n      {order.step < 4 ? (\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.btn}\n          onClick={() => handleNext({ id: order.id, step: order.step + 1 })}\n        >\n          Đã {steps[order.step]} xong\n        </Button>\n      ) : null}\n    </Paper>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AALA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;A","sourceRoot":""}
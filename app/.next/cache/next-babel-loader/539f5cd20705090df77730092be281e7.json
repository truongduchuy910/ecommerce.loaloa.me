{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecommerce/app/components/Cart/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { emptyCart } from \"../../apollo/action\";\nimport { customerVar, newOrderVar, newOrderCountVar } from \"../../apollo/client\";\nimport { Item as CartItem } from \"./item\";\nimport { List } from \"./list\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nimport { formatMoney, getErrorMessage } from \"../../lib/chip\";\nimport { Fragment } from \"react\";\nimport { css } from \"../src/css\";\nimport { theme } from \"../../config/index\";\nimport { Loading } from \"../src/Loading\";\nimport { Link } from \"../src/Link\";\nimport { List as Customer } from \"../Customer/CurrentCustomer\";\nimport { QuickCart } from \"./quickCart\";\nimport { Row, Col } from \"reactstrap\";\nexport const CART = gql`\n  query {\n    cartItems @client\n    user @client\n    customer @client\n  }\n`; // create orderItem\n\nexport const CREATE_ORDER_ITEMS = gql`\n  mutation($data: [OrderItemsCreateInput]) {\n    createOrderItems(data: $data) {\n      id\n    }\n  }\n`; // create Order\n\nexport const CREATE_ORDER = gql`\n  mutation(\n    $items: [OrderItemWhereUniqueInput]\n    $customer: CustomerWhereUniqueInput\n    $ofSeller: UserWhereUniqueInput\n    $total: Int\n  ) {\n    createOrder(\n      data: {\n        customer: { connect: $customer }\n        items: { connect: $items }\n        ofSeller: { connect: $ofSeller }\n        total: $total\n      }\n    ) {\n      id\n      seller {\n        id\n        name\n      }\n      items {\n        id\n        product {\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n          name\n        }\n        price\n        quantity\n        attributes {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\nexport const OrderItemsCreateInput = item => ({\n  data: {\n    product: {\n      connect: {\n        id: item.product.id\n      }\n    },\n    price: item.price,\n    quantity: item.quantity\n  }\n});\nexport const OrderItemsCreateInputs = (cartItems = []) => cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(item => OrderItemsCreateInput(item));\nexport const order = async ({\n  createOrderItems,\n  createOrder,\n  dataOICI,\n  page,\n  customer,\n  sum,\n  router\n}) => {\n  // create cart items\n  const {\n    data: dataCOI,\n    error\n  } = await createOrderItems({\n    variables: {\n      data: dataOICI\n    }\n  });\n  console.log(dataCOI); // creat cart and connect cart items\n\n  if (dataCOI.createOrderItems) {\n    let variables = {\n      items: dataCOI.createOrderItems.map(e => ({\n        id: e.id\n      })),\n      customer: {\n        id: customer.id\n      },\n      ofSeller: {\n        id: page.seller.id\n      },\n      total: sum\n    };\n\n    try {\n      var _dataCreateOrder$crea;\n\n      const {\n        data: dataCreateOrder,\n        errors: ER\n      } = await createOrder({\n        variables\n      });\n      console.log(dataCreateOrder);\n      newOrderVar(true);\n      newOrderCountVar(true);\n      emptyCart();\n      router.push({\n        pathname: \"/order\",\n        query: {\n          createOrderId: dataCreateOrder === null || dataCreateOrder === void 0 ? void 0 : (_dataCreateOrder$crea = dataCreateOrder.createOrder) === null || _dataCreateOrder$crea === void 0 ? void 0 : _dataCreateOrder$crea.id\n        }\n      });\n    } catch {}\n  }\n};\nexport function Cart() {\n  const router = useRouter(); // query\n\n  const {\n    data: cartData,\n    loading,\n    error\n  } = useQuery(CART); // mutation\n\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n  if (loading || error || !cartData) return __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  });\n  const {\n    customer,\n    cartItems,\n    user\n  } = cartData;\n  let sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(cartItem => {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(data => data.data.ofSeller = {\n    connect: {\n      id: page.seller.id\n    }\n  }); // function\n\n  return __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, (user === null || user === void 0 ? void 0 : user.id) ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Customer, {\n    customer: customer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })) : __jsx(\"div\", {\n    style: {\n      paddingBottom: theme.spacing(3)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/signin\",\n      query: {\n        redirect: \"/cart\"\n      }\n    },\n    style: {\n      marginBottom: theme.spacing(4),\n      display: \"block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Mua h\\xE0ng v\\u1EDBi t\\xE0i kho\\u1EA3n (Khuy\\xEAn d\\xF9ng)\"), __jsx(QuickCart, {\n    cartItems: cartItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), \" \", __jsx(List, {\n    cartItems: cartItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), (dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.length) && user ? __jsx(\"button\", {\n    style: css.button,\n    onClick: () => {\n      order({\n        createOrderItems,\n        createOrder,\n        dataOICI,\n        page,\n        customer,\n        sum,\n        router\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"X\\xE1c nh\\u1EADn \\u0111\\u01A1n h\\xE0ng\") : null));\n}","map":{"version":3,"sources":["/home/huy/apps/ecommerce/app/components/Cart/index.js"],"names":["gql","useQuery","useMutation","emptyCart","customerVar","newOrderVar","newOrderCountVar","Item","CartItem","List","useRouter","page","formatMoney","getErrorMessage","Fragment","css","theme","Loading","Link","Customer","QuickCart","Row","Col","CART","CREATE_ORDER_ITEMS","CREATE_ORDER","OrderItemsCreateInput","item","data","product","connect","id","price","quantity","OrderItemsCreateInputs","cartItems","map","order","createOrderItems","createOrder","dataOICI","customer","sum","router","dataCOI","error","variables","console","log","items","e","ofSeller","seller","total","dataCreateOrder","errors","ER","push","pathname","query","createOrderId","Cart","cartData","loading","user","cartItem","paddingBottom","spacing","redirect","marginBottom","display","length","button"],"mappings":"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","sourcesContent":["import { gql, useQuery, useMutation } from \"@apollo/client\";\n\nimport { emptyCart } from \"../../apollo/action\";\nimport {\n  customerVar,\n  newOrderVar,\n  newOrderCountVar,\n} from \"../../apollo/client\";\nimport { Item as CartItem } from \"./item\";\nimport { List } from \"./list\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\n\nimport { formatMoney, getErrorMessage } from \"../../lib/chip\";\nimport { Fragment } from \"react\";\nimport { css } from \"../src/css\";\nimport { theme } from \"../../config/index\";\n\nimport { Loading } from \"../src/Loading\";\nimport { Link } from \"../src/Link\";\nimport { List as Customer } from \"../Customer/CurrentCustomer\";\nimport { QuickCart } from \"./quickCart\";\nimport { Row, Col } from \"reactstrap\";\nexport const CART = gql`\n  query {\n    cartItems @client\n    user @client\n    customer @client\n  }\n`;\n// create orderItem\nexport const CREATE_ORDER_ITEMS = gql`\n  mutation($data: [OrderItemsCreateInput]) {\n    createOrderItems(data: $data) {\n      id\n    }\n  }\n`;\n\n// create Order\nexport const CREATE_ORDER = gql`\n  mutation(\n    $items: [OrderItemWhereUniqueInput]\n    $customer: CustomerWhereUniqueInput\n    $ofSeller: UserWhereUniqueInput\n    $total: Int\n  ) {\n    createOrder(\n      data: {\n        customer: { connect: $customer }\n        items: { connect: $items }\n        ofSeller: { connect: $ofSeller }\n        total: $total\n      }\n    ) {\n      id\n      seller {\n        id\n        name\n      }\n      items {\n        id\n        product {\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n          name\n        }\n        price\n        quantity\n        attributes {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\nexport const OrderItemsCreateInput = (item) => ({\n  data: {\n    product: { connect: { id: item.product.id } },\n    price: item.price,\n    quantity: item.quantity,\n  },\n});\nexport const OrderItemsCreateInputs = (cartItems = []) =>\n  cartItems?.map((item) => OrderItemsCreateInput(item));\n\nexport const order = async ({\n  createOrderItems,\n  createOrder,\n  dataOICI,\n  page,\n  customer,\n  sum,\n  router,\n}) => {\n  // create cart items\n  const { data: dataCOI, error } = await createOrderItems({\n    variables: {\n      data: dataOICI,\n    },\n  });\n  console.log(dataCOI);\n  // creat cart and connect cart items\n  if (dataCOI.createOrderItems) {\n    let variables = {\n      items: dataCOI.createOrderItems.map((e) => ({\n        id: e.id,\n      })),\n      customer: { id: customer.id },\n      ofSeller: { id: page.seller.id },\n      total: sum,\n    };\n    try {\n      const { data: dataCreateOrder, errors: ER } = await createOrder({\n        variables,\n      });\n      console.log(dataCreateOrder);\n\n      newOrderVar(true);\n      newOrderCountVar(true);\n      emptyCart();\n      router.push({\n        pathname: \"/order\",\n        query: { createOrderId: dataCreateOrder?.createOrder?.id },\n      });\n    } catch {}\n  }\n};\nexport function Cart() {\n  const router = useRouter();\n  // query\n  const { data: cartData, loading, error } = useQuery(CART);\n  // mutation\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n\n  if (loading || error || !cartData) return <Loading />;\n\n  const { customer, cartItems, user } = cartData;\n  let sum = 0;\n  cartItems?.map((cartItem) => {\n    sum += cartItem.price;\n  });\n\n  // create OrderItemsCreateInputs (GraphQL type)\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI?.map(\n    (data) => (data.data.ofSeller = { connect: { id: page.seller.id } })\n  );\n\n  // function\n\n  return (\n    <Row>\n      <Col>\n        {/* CUSTOMER */}\n        {user?.id ? (\n          <div>\n            <Customer customer={customer} />\n          </div>\n        ) : (\n          <div\n            style={{\n              paddingBottom: theme.spacing(3),\n            }}\n          >\n            <Link\n              href={{ pathname: \"/signin\", query: { redirect: \"/cart\" } }}\n              style={{ marginBottom: theme.spacing(4), display: \"block\" }}\n            >\n              Mua hàng với tài khoản (Khuyên dùng)\n            </Link>\n            <QuickCart cartItems={cartItems} />\n          </div>\n        )}{\" \"}\n        {/* LIST CART ITEM */}\n        <List cartItems={cartItems} />\n        {/* CREATE BUTTON */}\n        {dataOICI?.length && user ? (\n          <button\n            style={css.button}\n            onClick={() => {\n              order({\n                createOrderItems,\n                createOrder,\n                dataOICI,\n                page,\n                customer,\n                sum,\n                router,\n              });\n            }}\n          >\n            Xác nhận đơn hàng\n          </button>\n        ) : null}\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
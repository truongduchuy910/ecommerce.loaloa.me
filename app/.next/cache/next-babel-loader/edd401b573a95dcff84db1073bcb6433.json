{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst createKetQuas = ({\n  laSoTuVi,\n  data,\n  onSubmit\n}) => {\n  const {\n    0: autocomplete,\n    1: setAuto\n  } = useState(false); //\n\n  const {\n    0: cung,\n    1: setCung\n  } = useState({});\n  const {\n    0: cungVi,\n    1: setCungVi\n  } = useState({});\n  const {\n    0: chinhTinhs,\n    1: setChinhTinhs\n  } = useState([]);\n  const {\n    0: phuTinhs,\n    1: setPhuTinhs\n  } = useState([]);\n  let variables = {\n    cung: cung === null || cung === void 0 ? void 0 : cung.id,\n    cungVi: cungVi === null || cungVi === void 0 ? void 0 : cungVi.id,\n    chinhTinhs: onlyId(chinhTinhs),\n    phuTinhs: onlyId(phuTinhs)\n  }; // auto fill\n\n  const {\n    0: autoFill,\n    1: setAutoFill\n  } = useState(false); // autocomplete = true\n\n  const {\n    0: DX,\n    1: setDX\n  } = useState();\n  const {\n    0: T1,\n    1: setT1\n  } = useState();\n  const {\n    0: T2,\n    1: setT2\n  } = useState();\n  const {\n    0: XC,\n    1: setXC\n  } = useState(); // // autocomplete = false\n\n  const {\n    0: CV,\n    1: setCV\n  } = useState();\n  const {\n    0: CT,\n    1: setCT\n  } = useState([]);\n  const {\n    0: PT,\n    1: setPT\n  } = useState();\n  const {\n    0: PTT1,\n    1: setPTT1\n  } = useState();\n  const {\n    0: PTT2,\n    1: setPTT2\n  } = useState();\n  const {\n    0: PTXC,\n    1: setPTXC\n  } = useState();\n  useEffect(() => {});\n\n  function handleCungChange(cung) {\n    setCung(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let {\n        DX,\n        T1,\n        T2,\n        XC\n      } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      });\n      console.log(DX);\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Cung, {\n    onChange: handleCungChange\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(CungVi, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CV: CV,\n    setCV: setCV\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllChinhTinhs, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CT: CT,\n    setCT: setCT\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    setCung: setDX,\n    PT: PT,\n    setPT: setPT\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false,\n    cung: autocomplete ? T1 : false,\n    setCung: setT1,\n    PT: PTT1,\n    setPT: setPTT1\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false,\n    cung: autocomplete ? T2 : false,\n    setCung: setT2,\n    PT: PTT2,\n    setPT: setPTT2\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false,\n    cung: autocomplete ? XC : false,\n    setCung: setXC,\n    PT: PTXC,\n    setPT: setPTXC\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\"\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => onSubmit({\n      cung: cung === null || cung === void 0 ? void 0 : cung.is,\n      cungVi: cungVi === null || cungVi === void 0 ? void 0 : cungVi.id,\n      chinhTinhs: onlyId(chinhTinhs),\n      phuTinhs: onlyId(phuTinhs)\n    })\n  }, \"Xem K\\u1EBFt Qu\\u1EA3\"))));\n};\n\nexport default createKetQuas;\n\nfunction onlyId(array) {\n  if (!array) return [];\n  let result = [];\n  array.map(item => result.push(item.id));\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}
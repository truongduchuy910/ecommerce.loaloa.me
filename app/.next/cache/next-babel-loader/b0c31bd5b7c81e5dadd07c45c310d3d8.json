{"ast":null,"code":"var _jsxFileName = \"/home/truongduchuy910/apps/tuvi/app/components/ketQuas/allKetQuas.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { useState } from \"react\";\n\nfunction intersect(A = [], B = []) {\n  let inter = false;\n  A.forEach(a => {\n    B.forEach(b => {\n      if (a.id == b.id) inter = true;\n    });\n  });\n  return inter;\n}\n\nexport default (({\n  allKetQuas: data = []\n}) => {\n  let {\n    0: allKetQuas,\n    1: setAllKetQuas\n  } = useState(data);\n  let index = 0;\n  return __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    style: {\n      overflowY: \"scroll\",\n      maxHeight: \"70vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, allKetQuas.map(ketQua => {\n    ketQua.order = index;\n    index++;\n    ketQua.ketQua.sort((a, b) => a.chinhTinh.length + a.phuTinh.length < b.chinhTinh.length + b.phuTinh.length ? 1 : a.chinhTinh.length + a.phuTinh.length == b.chinhTinh.length + b.phuTinh.length ? a.chinhTinh.length < b.chinhTinh.length ? 1 : -1 : -1);\n    let existChinhTinhs = [];\n    let existPhuTinhs = [];\n    return __jsx(Grid, {\n      key: ketQua.id,\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Box, {\n      style: {\n        backgroundColor: \"transparent\",\n        border: 1,\n        borderColor: \"rgba(0, 0, 0, 0.3)\",\n        borderStyle: \"solid\",\n        borderRadius: 8,\n        padding: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(HighlightOffIcon, {\n      onClick: () => {\n        console.log(ketQua.order);\n        setAllKetQuas(allKetQuas.slice(0, ketQua.order).concat(allKetQuas.slice(ketQua.order + 1)));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), __jsx(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(ListItemText, {\n      primary: __jsx(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"tuvilogic.com\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), __jsx(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(LabelIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), __jsx(ListItemText, {\n      primary: __jsx(Typography, {\n        style: {\n          fontWeight: \"bold\",\n          color: \"#dab857\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, `Cung ${ketQua.cung.name}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), ketQua.ketQua.map(giai => {\n      let chinhTinhs = giai.chinhTinh.map(tinh => tinh.name).toString();\n      let phuTinhs = giai.phuTinh.map(tinh => tinh.name).toString();\n      let available = false;\n\n      if (giai.chinhTinh.length && !intersect(giai.chinhTinh, existChinhTinhs)) {\n        available = true;\n        existChinhTinhs = existChinhTinhs.concat(giai.chinhTinh);\n      }\n\n      if (giai.phuTinh.length && !intersect(giai.phuTinh, existPhuTinhs)) {\n        available = true;\n        existPhuTinhs = existPhuTinhs.concat(giai.phuTinh);\n      }\n\n      if (available) {\n        return __jsx(List, {\n          component: \"nav\",\n          key: giai.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, chinhTinhs ? __jsx(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(StarIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })), __jsx(ListItemText, {\n          primary: `Chính tinh ${chinhTinhs}. `,\n          secondary: giai.giai,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        })) : null, phuTinhs ? __jsx(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, __jsx(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, __jsx(StarBorderIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), __jsx(ListItemText, {\n          primary: `Phụ tinh ${phuTinhs}. `,\n          secondary: giai.giai,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })) : null);\n      }\n    })));\n  }));\n});","map":{"version":3,"sources":["/home/truongduchuy910/apps/tuvi/app/components/ketQuas/allKetQuas.js"],"names":["Grid","Box","Typography","List","ListItem","ListItemIcon","ListItemText","LabelIcon","StarIcon","StarBorderIcon","HighlightOffIcon","useState","intersect","A","B","inter","forEach","a","b","id","allKetQuas","data","setAllKetQuas","index","overflowY","maxHeight","map","ketQua","order","sort","chinhTinh","length","phuTinh","existChinhTinhs","existPhuTinhs","backgroundColor","border","borderColor","borderStyle","borderRadius","padding","console","log","slice","concat","fontWeight","color","cung","name","giai","chinhTinhs","tinh","toString","phuTinhs","available"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { useState } from \"react\";\n\nfunction intersect(A = [], B = []) {\n  let inter = false;\n  A.forEach(a => {\n    B.forEach(b => {\n      if (a.id == b.id) inter = true;\n    });\n  });\n  return inter;\n}\nexport default ({ allKetQuas: data = [] }) => {\n  let [allKetQuas, setAllKetQuas] = useState(data);\n  let index = 0;\n  return (\n    <Grid\n      container\n      spacing={1}\n      style={{ overflowY: \"scroll\", maxHeight: \"70vh\" }}\n    >\n      {allKetQuas.map(ketQua => {\n        ketQua.order = index;\n        index++;\n        ketQua.ketQua.sort((a, b) =>\n          a.chinhTinh.length + a.phuTinh.length <\n          b.chinhTinh.length + b.phuTinh.length\n            ? 1\n            : a.chinhTinh.length + a.phuTinh.length ==\n              b.chinhTinh.length + b.phuTinh.length\n            ? a.chinhTinh.length < b.chinhTinh.length\n              ? 1\n              : -1\n            : -1\n        );\n\n        let existChinhTinhs = [];\n        let existPhuTinhs = [];\n        return (\n          <Grid key={ketQua.id} item xs={12}>\n            <Box\n              style={{\n                backgroundColor: \"transparent\",\n                border: 1,\n                borderColor: \"rgba(0, 0, 0, 0.3)\",\n                borderStyle: \"solid\",\n                borderRadius: 8,\n                padding: 16\n              }}\n            >\n              <List>\n                <ListItem>\n                  <ListItemIcon>\n                    <HighlightOffIcon\n                      onClick={() => {\n                        console.log(ketQua.order);\n                        setAllKetQuas(\n                          allKetQuas\n                            .slice(0, ketQua.order)\n                            .concat(allKetQuas.slice(ketQua.order + 1))\n                        );\n                      }}\n                    />\n                  </ListItemIcon>\n                </ListItem>\n\n                <ListItem>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"h6\">tuvilogic.com</Typography>\n                    }\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <LabelIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography\n                        style={{ fontWeight: \"bold\", color: \"#dab857\" }}\n                      >{`Cung ${ketQua.cung.name}`}</Typography>\n                    }\n                  />\n                </ListItem>\n              </List>\n              {ketQua.ketQua.map(giai => {\n                let chinhTinhs = giai.chinhTinh\n                  .map(tinh => tinh.name)\n                  .toString();\n                let phuTinhs = giai.phuTinh.map(tinh => tinh.name).toString();\n\n                let available = false;\n                if (\n                  giai.chinhTinh.length &&\n                  !intersect(giai.chinhTinh, existChinhTinhs)\n                ) {\n                  available = true;\n                  existChinhTinhs = existChinhTinhs.concat(giai.chinhTinh);\n                }\n                if (\n                  giai.phuTinh.length &&\n                  !intersect(giai.phuTinh, existPhuTinhs)\n                ) {\n                  available = true;\n                  existPhuTinhs = existPhuTinhs.concat(giai.phuTinh);\n                }\n                if (available) {\n                  return (\n                    <List component=\"nav\" key={giai.id}>\n                      {chinhTinhs ? (\n                        <ListItem>\n                          <ListItemIcon>\n                            <StarIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={`Chính tinh ${chinhTinhs}. `}\n                            secondary={giai.giai}\n                          />\n                        </ListItem>\n                      ) : null}\n                      {phuTinhs ? (\n                        <ListItem>\n                          <ListItemIcon>\n                            <StarBorderIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={`Phụ tinh ${phuTinhs}. `}\n                            secondary={giai.giai}\n                          />\n                        </ListItem>\n                      ) : null}\n                    </List>\n                  );\n                }\n              })}\n            </Box>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
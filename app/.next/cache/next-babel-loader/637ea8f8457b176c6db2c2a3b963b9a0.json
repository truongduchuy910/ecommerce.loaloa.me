{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/loaloa.me/app/components/user/loginForm.js\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport LightBoard from \"../../src/LightBoard\";\nimport Link from \"../../src/Link\";\nimport Logo from \"../../src/logo\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUserName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"Đăng nhập\"),\n      buttonStatus = _useState3[0],\n      setButtonStatus = _useState3[1];\n\n  function loginButtonClick() {\n    var response, authenticateUserWithPassword, token, _authenticateUserWith, id, email;\n\n    return _regeneratorRuntime.async(function loginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setButtonStatus(\"Vui lòng đợi...\");\n\n            if (!(username.length > 5 && password.length > 5)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request(getGraphUri(), \"mutation($username: String, $password: String) {\\n      authenticateUserWithPassword(email: $username, password: $password) {\\n      token\\n      item {\\n          id\\n          email\\n          isAdmin\\n          isSupporter\\n          isCustomer\\n      }\\n      }}\", {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            response = _context.sent;\n            authenticateUserWithPassword = response.authenticateUserWithPassword;\n\n            if (authenticateUserWithPassword) {\n              token = authenticateUserWithPassword.token, _authenticateUserWith = authenticateUserWithPassword.item, id = _authenticateUserWith.id, email = _authenticateUserWith.email;\n              setButtonStatus(\"Đang điều hướng...!\");\n              login({\n                token: token,\n                id: id,\n                email: email\n              });\n            } else {\n              setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            setButtonStatus(\"Kiểm tra và thử lại\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: function onChange(e) {\n      setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true // variant=\"outlined\"\n    ,\n    onClick: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(loginButtonClick());\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, buttonStatus)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng k\\xFD\")))));\n}","map":{"version":3,"sources":["/home/truongduchuy910/apps/loaloa.me/app/components/user/loginForm.js"],"names":["Grid","TextField","Button","Container","Typography","useState","React","Component","FacebookProvider","Comments","CustomChat","request","login","Layout","LightBoard","Link","Logo","getGraphUri","loginForm","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","response","authenticateUserWithPassword","token","item","id","email","e","target","value","backgroundColor","color","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\n\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport LightBoard from \"../../src/LightBoard\";\nimport Link from \"../../src/Link\";\nimport Logo from \"../../src/logo\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let [username, setUserName] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(\n        getGraphUri(),\n        `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n        {\n          username,\n          password\n        }\n      );\n\n      let { authenticateUserWithPassword } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({ token, id, email});\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <LightBoard>\n      <Logo />\n      <form noValidate autoComplete=\"on\">\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              id=\"username\"\n              label=\"Tên đăng nhập\"\n              onChange={e => {\n                setUserName(e.target.value);\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              id=\"password\"\n              label=\"Mật khẩu\"\n              type=\"password\"\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              style={{\n                backgroundColor: \"#76552a\",\n                color: \"#dab857\",\n                marginTop: 21,\n                marginBottom: 21\n              }}\n              fullWidth\n              // variant=\"outlined\"\n              onClick={async () => await loginButtonClick()}\n            >\n              {buttonStatus}\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Link href=\"/signup\">Đăng ký</Link>\n          </Grid>\n        </Grid>\n      </form>\n    </LightBoard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
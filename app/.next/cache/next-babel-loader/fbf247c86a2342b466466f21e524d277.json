{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/createKetQua.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation(\\n    $cung: CungWhereUniqueInput\\n    $cungVi: CungViWhereUniqueInput\\n    $chinhTinhs: [TinhWhereUniqueInput]\\n    $phuTinhs: [PhuTinhWhereUniqueInput]\\n  ) {\\n    createKetQua(\\n      data: {\\n        cung: { connect: $cung }\\n        cungVi: { connect: $cungVi }\\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\\n      }\\n    ) {\\n      id\\n      cung {\\n        name\\n      }\\n      loiGiais: ketQua {\\n        id\\n        cung {\\n          name\\n        }\\n        chinhTinh {\\n          id\\n          name\\n        }\\n        phuTinh {\\n          id\\n          name\\n        }\\n        giai\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nvar createKetQuaMutation = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(1),\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\n\nvar createKetQuas = function createKetQuas(_ref) {\n  _s();\n\n  var laSoTuVi = _ref.laSoTuVi,\n      onCreate = _ref.onCreate;\n\n  var _useMutation = useMutation(createKetQuaMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createKetQua = _useMutation2[0];\n\n  var router = useRouter(); //\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1]; // alert\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      alertOpen = _React$useState2[0],\n      setAlertOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      alertMessage = _React$useState4[0],\n      setAlertMessage = _React$useState4[1]; // autocomplete\n\n\n  var _useState2 = useState(false),\n      autocomplete = _useState2[0],\n      setAuto = _useState2[1];\n\n  var _useState3 = useState(false),\n      autoEnable = _useState3[0],\n      setAutoEnable = _useState3[1]; // autocomplete = true data from \"laSoTuVi\"\n\n\n  var _useState4 = useState(),\n      DX = _useState4[0],\n      setDX = _useState4[1];\n\n  var _useState5 = useState(),\n      T1 = _useState5[0],\n      setT1 = _useState5[1];\n\n  var _useState6 = useState(),\n      T2 = _useState6[0],\n      setT2 = _useState6[1];\n\n  var _useState7 = useState(),\n      XC = _useState7[0],\n      setXC = _useState7[1]; // // autocomplete = false data from child state\n\n\n  var _useState8 = useState(),\n      C = _useState8[0],\n      setC = _useState8[1];\n\n  var _useState9 = useState(),\n      CV = _useState9[0],\n      setCV = _useState9[1];\n\n  var _useState10 = useState([]),\n      CT = _useState10[0],\n      setCT = _useState10[1];\n\n  var _useState11 = useState([]),\n      PT = _useState11[0],\n      setPT = _useState11[1];\n\n  var _useState12 = useState([]),\n      PTT1 = _useState12[0],\n      setPTT1 = _useState12[1];\n\n  var _useState13 = useState([]),\n      PTT2 = _useState13[0],\n      setPTT2 = _useState13[1];\n\n  var _useState14 = useState([]),\n      PTXC = _useState14[0],\n      setPTXC = _useState14[1];\n\n  useEffect(function () {\n    setAutoEnable(Boolean(laSoTuVi));\n  });\n\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      var _layCung = layCung({\n        cung: cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      }),\n          _DX = _layCung.DX,\n          _T = _layCung.T1,\n          _T2 = _layCung.T2,\n          _XC = _layCung.XC;\n\n      setDX(_DX);\n      setT1(_T);\n      setT2(_T2);\n      setXC(_XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  function handleSubmit() {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var variables, _ref2, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              variables = {\n                cung: {\n                  id: C === null || C === void 0 ? void 0 : C.id\n                },\n                cungVi: {\n                  id: CV === null || CV === void 0 ? void 0 : CV.id\n                },\n                chinhTinhs: WhereUniqueInput(CT),\n                phuTinhs: WhereUniqueInput(PT.concat(PTT1).concat(PTT2).concat(PTXC))\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return createKetQua({\n                variables: variables\n              });\n\n            case 5:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              onCreate(data === null || data === void 0 ? void 0 : data.createKetQua);\n              setLoading(false);\n              _context.next = 18;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              setAlertMessage(getErrorMessage(_context.t0));\n              setAlertOpen(true);\n              setLoading(false);\n              _context.next = 18;\n              return router.push(\"/\");\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var alertClose = function alertClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n\n  var classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(Cung, {\n    onChange: handleCungChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, __jsx(CungVi, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CV: CV,\n    setCV: setCV,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, __jsx(AllChinhTinhs, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CT: CT,\n    setCT: setCT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    setCung: setDX,\n    PT: PT,\n    setPT: setPT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false,\n    cung: autocomplete ? T1 : false,\n    setCung: setT1,\n    PT: PTT1,\n    setPT: setPTT1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false,\n    cung: autocomplete ? T2 : false,\n    setCung: setT2,\n    PT: PTT2,\n    setPT: setPTT2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false,\n    cung: autocomplete ? XC : false,\n    setCung: setXC,\n    PT: PTXC,\n    setPT: setPTXC,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      disabled: !autoEnable,\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, loading ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, __jsx(CircularProgress, {\n    size: 24.5,\n    color: \"secondary\",\n    style: {\n      marginRight: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }), \" \", \"Vui l\\xF2ng \\u0111\\u1EE3i\") : \"Xem Kết Quả\"))), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: alertOpen,\n    onClose: alertClose,\n    autoHideDuration: 3000,\n    message: alertMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(createKetQuas, \"emRO1Qet/YvPGLOqyPz8RrpQKDQ=\", false, function () {\n  return [useMutation, useRouter, useStyles];\n});\n\nexport default createKetQuas;\n\nfunction WhereUniqueInput(array) {\n  if (!array) return [];\n  var result = [];\n  array.map(function (item) {\n    return result.push({\n      id: item.id\n    });\n  });\n  return result;\n}\n\n_c = WhereUniqueInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhereUniqueInput\");","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/createKetQua.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Snackbar","CircularProgress","useState","useEffect","useRouter","gql","useMutation","Cung","CungVi","AllChinhTinhs","AllPhuTinhs","layCung","getErrorMessage","createKetQuaMutation","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","onCreate","createKetQua","router","loading","setLoading","React","alertOpen","setAlertOpen","alertMessage","setAlertMessage","autocomplete","setAuto","autoEnable","setAutoEnable","DX","setDX","T1","setT1","T2","setT2","XC","setXC","C","setC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","Boolean","handleCungChange","cung","thapNhiCung","handleChangeCheckBox","event","target","checked","handleSubmit","variables","id","cungVi","chinhTinhs","WhereUniqueInput","phuTinhs","concat","data","push","alertClose","reason","classes","cungChu","marginRight","vertical","horizontal","array","result","map","item"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\n\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\nconst createKetQuas = ({ laSoTuVi, onCreate }) => {\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n\n  //\n  const [loading, setLoading] = useState(false);\n  // alert\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  // autocomplete\n  const [autocomplete, setAuto] = useState(false);\n  const [autoEnable, setAutoEnable] = useState(false);\n  // autocomplete = true data from \"laSoTuVi\"\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false data from child state\n  const [C, setC] = useState();\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState([]);\n  const [PT, setPT] = useState([]);\n  const [PTT1, setPTT1] = useState([]);\n  const [PTT2, setPTT2] = useState([]);\n  const [PTXC, setPTXC] = useState([]);\n\n  useEffect(() => {\n    setAutoEnable(Boolean(laSoTuVi));\n  });\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: { id: C?.id },\n      cungVi: { id: CV?.id },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(\n        PT.concat(PTT1)\n          .concat(PTT2)\n          .concat(PTXC)\n      ),\n    };\n    try {\n      const { data } = await createKetQua({\n        variables,\n      });\n      onCreate(data?.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Cung onChange={handleCungChange} />\n        </Grid>\n        <Grid item xs={12}>\n          <CungVi\n            cung={autocomplete ? DX : false}\n            setCung={setDX}\n            CV={CV}\n            setCV={setCV}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllChinhTinhs\n            cung={autocomplete ? DX : false}\n            setCung={setDX}\n            CT={CT}\n            setCT={setCT}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs cung={DX} setCung={setDX} PT={PT} setPT={setPT} />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T1 ? \"Tam hợp \" + T1.cungChu : false}\n            cung={autocomplete ? T1 : false}\n            setCung={setT1}\n            PT={PTT1}\n            setPT={setPTT1}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T2 ? \"Tam hợp \" + T2.cungChu : false}\n            cung={autocomplete ? T2 : false}\n            setCung={setT2}\n            PT={PTT2}\n            setPT={setPTT2}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={XC ? \"Xung chiếu \" + XC.cungChu : false}\n            cung={autocomplete ? XC : false}\n            setCung={setXC}\n            PT={PTXC}\n            setPT={setPTXC}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={!autoEnable}\n                checked={autocomplete}\n                onChange={handleChangeCheckBox}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Tự động điền từ lá sô?\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={handleSubmit}\n          >\n            {loading ? (\n              <React.Fragment>\n                <CircularProgress\n                  size={24.5}\n                  color=\"secondary\"\n                  style={{ marginRight: 15 }}\n                />{\" \"}\n                Vui lòng đợi\n              </React.Fragment>\n            ) : (\n              \"Xem Kết Quả\"\n            )}\n          </Button>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={alertOpen}\n        onClose={alertClose}\n        autoHideDuration={3000}\n        message={alertMessage}\n      />\n    </Paper>\n  );\n};\nexport default createKetQuas;\nfunction WhereUniqueInput(array) {\n  if (!array) return [];\n  let result = [];\n  array.map((item) => result.push({ id: item.id }));\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}
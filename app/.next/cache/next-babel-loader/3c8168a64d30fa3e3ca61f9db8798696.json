{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/phuTinhs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layPhuTinhs } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allPhuTinhs {\n      id\n      name\n    }\n  }\n`;\nexport default function phuTinhs({\n  cung,\n  label,\n  autocomplete\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query);\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n  let PT;\n\n  if ((data === null || data === void 0 ? void 0 : data.allPhuTinhs) && cung && autocomplete) {\n    PT = layPhuTinhs({\n      allPhuTinhs: data.allPhuTinhs,\n      cung\n    }).PT;\n  }\n\n  return (data === null || data === void 0 ? void 0 : data.allPhuTinhs) && !loading ? __jsx(Autocomplete, {\n    value: PT || {},\n    onChange: (event, value) => onChange(value),\n    multiple: true,\n    size: \"small\",\n    options: data.allPhuTinhs,\n    getOptionLabel: option => {\n      return option ? option.name : {};\n    },\n    filterSelectedOptions: true,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      variant: \"outlined\",\n      label: label ? label : \"Phụ tinh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/phuTinhs.js"],"names":["TextField","Autocomplete","Skeleton","useState","useEffect","useRouter","gql","useQuery","layPhuTinhs","query","phuTinhs","cung","label","autocomplete","data","loading","error","shouldRedirect","router","push","PT","allPhuTinhs","event","value","onChange","option","name","params"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,MAAMC,KAAK,GAAGH,GAAI;;;;;;;CAAlB;AAQA,eAAe,SAASI,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAlB,EAAiD;AAC9D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACE,KAAD,CAAzC;AAEA,QAAMQ,cAAc,GAAG,EAAEF,OAAO,IAAID,IAAb,CAAvB;AACA,QAAMI,MAAM,GAAGb,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,cAAJ,EAAoB;AAClBC,MAAAA,MAAM,CAACC,IAAP,CAAY,SAAZ;AACD;AACF,GAJQ,EAIN,CAACF,cAAD,CAJM,CAAT;AAKA,MAAIG,EAAJ;;AACA,MAAI,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,WAAN,KAAqBV,IAArB,IAA6BE,YAAjC,EAA+C;AAC7CO,IAAAA,EAAE,GAAGZ,WAAW,CAAC;AAAEa,MAAAA,WAAW,EAAEP,IAAI,CAACO,WAApB;AAAiCV,MAAAA;AAAjC,KAAD,CAAX,CAAqDS,EAA1D;AACD;;AACD,SAAO,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,WAAN,KAAqB,CAACN,OAAtB,GACL,MAAC,YAAD;AACE,IAAA,KAAK,EAAEK,EAAE,IAAI,EADf;AAEE,IAAA,QAAQ,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBC,QAAQ,CAACD,KAAD,CAFtC;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,OAAO,EAAET,IAAI,CAACO,WALhB;AAME,IAAA,cAAc,EAAGI,MAAD,IAAY;AAC1B,aAAOA,MAAM,GAAGA,MAAM,CAACC,IAAV,GAAiB,EAA9B;AACD,KARH;AASE,IAAA,qBAAqB,MATvB;AAUE,IAAA,WAAW,EAAGC,MAAD,IACX,MAAC,SAAD,eACMA,MADN;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAEf,KAAK,GAAGA,KAAH,GAAW,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAoBL,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,MAAlB;AAAyB,IAAA,MAAM,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF;AAsBD","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layPhuTinhs } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allPhuTinhs {\n      id\n      name\n    }\n  }\n`;\nexport default function phuTinhs({ cung, label, autocomplete }) {\n  const { data, loading, error } = useQuery(query);\n\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n  let PT;\n  if (data?.allPhuTinhs && cung && autocomplete) {\n    PT = layPhuTinhs({ allPhuTinhs: data.allPhuTinhs, cung }).PT;\n  }\n  return data?.allPhuTinhs && !loading ? (\n    <Autocomplete\n      value={PT || {}}\n      onChange={(event, value) => onChange(value)}\n      multiple\n      size=\"small\"\n      options={data.allPhuTinhs}\n      getOptionLabel={(option) => {\n        return option ? option.name : {};\n      }}\n      filterSelectedOptions\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          label={label ? label : \"Phụ tinh\"}\n        />\n      )}\n    />\n  ) : (\n    <Skeleton variant=\"rect\" height={40} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
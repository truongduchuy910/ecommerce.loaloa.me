{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/Products.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment, Fab, Drawer, IconButton, Box, InputBase } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useState } from \"react\";\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    width: 500,\n    maxWidth: \"90vh\"\n  },\n  search: {\n    padding: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: 8,\n    border: \"1px solid #c0c0c0\"\n  },\n  table: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  }\n}));\nexport default function ProductItem({\n  onClick\n}) {\n  const classes = useStyles();\n  const {\n    0: drawer,\n    1: setDrawer\n  } = useState(false);\n  let {\n    data,\n    loading,\n    error,\n    fetchMore,\n    refetch\n  } = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  });\n  let allProducts = data === null || data === void 0 ? void 0 : data.allProducts;\n\n  function handleClick({\n    product\n  }) {\n    setDrawer(false);\n    onClick({\n      product\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    size: \"small\",\n    onClick: () => setDrawer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(Drawer, {\n    open: drawer,\n    onClose: () => setDrawer(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(InputBase, {\n    className: classes.input,\n    placeholder: \"T\\xECm ki\\u1EBFm\",\n    inputProps: {\n      \"aria-label\": \"Tìm kiếm\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\u1EA2nh\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"T\\u1ED3n\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Gi\\xE1\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Gi\\u1EA3m\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, (allProducts === null || allProducts === void 0 ? void 0 : allProducts.length) ? allProducts.map(product => __jsx(TableRow, {\n    key: product.id,\n    hover: true,\n    onClick: () => handleClick({\n      product\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: \"100%\",\n      maxHeight: 40,\n      margin: 0\n    },\n    src: product.image ? product.image.publicUrl : product.images[0].file.publicUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, product.name), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, product.quantity), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, formatMoney(product.price, 0)), __jsx(TableCell, {\n    align: \"right\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"- \", formatMoney(product.sale, 0), \" \\u0111\")))) : null))))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/Products.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","Fab","Drawer","IconButton","Box","InputBase","SearchIcon","formatMoney","gql","useQuery","AddIcon","useState","query","useStyles","theme","root","padding","spacing","width","maxWidth","search","display","alignItems","borderRadius","border","table","margin","divider","height","input","marginLeft","flex","ProductItem","onClick","classes","drawer","setDrawer","data","loading","error","fetchMore","refetch","variables","limit","allProducts","handleClick","product","length","map","id","maxHeight","image","publicUrl","images","file","name","quantity","price","sale"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Fab,\n  Drawer,\n  IconButton,\n  Box,\n  InputBase,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useState } from \"react\";\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: theme.spacing(2), width: 500, maxWidth: \"90vh\" },\n  search: {\n    padding: theme.spacing(1),\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: 8,\n    border: \"1px solid #c0c0c0\",\n  },\n  table: { margin: theme.spacing(2), padding: theme.spacing(2) },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n}));\nexport default function ProductItem({ onClick }) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allProducts = data?.allProducts;\n  function handleClick({ product }) {\n    setDrawer(false);\n    onClick({ product });\n  }\n  return (\n    <React.Fragment>\n      <IconButton\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"small\"\n        onClick={() => setDrawer(true)}\n      >\n        <AddIcon />\n      </IconButton>\n      <Drawer open={drawer} onClose={() => setDrawer(false)}>\n        <Paper className={classes.root}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Box className={classes.search}>\n                {/* <Divider className={classes.divider} orientation=\"vertical\" /> */}\n                <InputBase\n                  className={classes.input}\n                  placeholder=\"Tìm kiếm\"\n                  inputProps={{ \"aria-label\": \"Tìm kiếm\" }}\n                />\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <TableContainer>\n                <Table aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ảnh</TableCell>\n                      <TableCell>Tên</TableCell>\n                      <TableCell align=\"right\">Tồn</TableCell>\n                      <TableCell align=\"right\">Giá</TableCell>\n                      <TableCell align=\"right\">Giảm</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {allProducts?.length\n                      ? allProducts.map((product) => (\n                          <TableRow\n                            key={product.id}\n                            hover\n                            onClick={() => handleClick({ product })}\n                          >\n                            <TableCell component=\"th\" scope=\"row\">\n                              <img\n                                style={{\n                                  maxWidth: \"100%\",\n                                  maxHeight: 40,\n                                  margin: 0,\n                                }}\n                                src={\n                                  product.image\n                                    ? product.image.publicUrl\n                                    : product.images[0].file.publicUrl\n                                }\n                              />\n                            </TableCell>\n                            <TableCell>{product.name}</TableCell>\n                            <TableCell>{product.quantity}</TableCell>\n                            <TableCell align=\"right\">\n                              {formatMoney(product.price, 0)}\n                            </TableCell>\n                            <TableCell align=\"right\" color=\"textSecondary\">\n                              <Typography variant=\"body2\" color=\"textSecondary\">\n                                - {formatMoney(product.sale, 0)} đ\n                              </Typography>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      : null}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
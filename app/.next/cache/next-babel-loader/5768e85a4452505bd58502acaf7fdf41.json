{"ast":null,"code":"var _jsxFileName = \"/home/truongduchuy910/apps/loaloa/app/components/users/loginForm.js\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport LightBoard from \"../../src/LightBoard\";\nimport Link from \"../../src/Link\";\nimport Logo from \"../../src/logo\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let {\n    0: username,\n    1: setUserName\n  } = useState(\"\");\n  let {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  let {\n    0: buttonStatus,\n    1: setButtonStatus\n  } = useState(\"Đăng nhập\");\n\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(getGraphUri(), `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n      }\n      }}`, {\n        username,\n        password\n      });\n      let {\n        authenticateUserWithPassword\n      } = response;\n\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: {\n            id,\n            email\n          }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({\n          token,\n          id,\n          email\n        });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n\n  return __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    onClick: async () => await loginButtonClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, buttonStatus)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng k\\xFD\")))));\n}","map":{"version":3,"sources":["/home/truongduchuy910/apps/loaloa/app/components/users/loginForm.js"],"names":["Grid","TextField","Button","Container","Typography","useState","React","Component","FacebookProvider","Comments","CustomChat","request","login","Layout","LightBoard","Link","Logo","getGraphUri","loginForm","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","response","authenticateUserWithPassword","token","item","id","email","e","target","value"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\n\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport LightBoard from \"../../src/LightBoard\";\nimport Link from \"../../src/Link\";\nimport Logo from \"../../src/logo\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let [username, setUserName] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(\n        getGraphUri(),\n        `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n      }\n      }}`,\n        {\n          username,\n          password\n        }\n      );\n\n      let { authenticateUserWithPassword } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({ token, id, email });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <LightBoard>\n      <Logo />\n      <form noValidate autoComplete=\"on\">\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              id=\"username\"\n              label=\"Tên đăng nhập\"\n              onChange={e => {\n                setUserName(e.target.value);\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              id=\"password\"\n              label=\"Mật khẩu\"\n              type=\"password\"\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              fullWidth\n              variant=\"outlined\"\n              onClick={async () => await loginButtonClick()}\n            >\n              {buttonStatus}\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Link href=\"/signup\">Đăng ký</Link>\n          </Grid>\n        </Grid>\n      </form>\n    </LightBoard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
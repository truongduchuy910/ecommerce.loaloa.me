{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst createKetQuas = ({\n  laSoTuVi,\n  data,\n  onSubmit\n}) => {\n  const {\n    0: autocomplete,\n    1: setAuto\n  } = useState(false);\n  const {\n    0: DX,\n    1: setDX\n  } = useState();\n  const {\n    0: T1,\n    1: setT1\n  } = useState();\n  const {\n    0: T2,\n    1: setT2\n  } = useState();\n  const {\n    0: XC,\n    1: setXC\n  } = useState();\n  useEffect(() => {});\n\n  function handleCungChane(cung) {\n    if (cung && laSoTuVi && autocomplete) {\n      let {\n        DX,\n        T1,\n        T2,\n        XC\n      } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Cung, {\n    onChange: handleCungChane\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(CungVi, {\n    cung: DX,\n    autocomplete: autocomplete\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllChinhTinhs, {\n    cung: DX,\n    autocomplete: autocomplete\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    autocomplete: autocomplete\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    cung: T1,\n    autocomplete: autocomplete,\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    cung: T2,\n    autocomplete: autocomplete,\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(AllPhuTinhs, {\n    cung: XC,\n    autocomplete: autocomplete,\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\"\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => {\n      var _selected_cungVi;\n\n      return onSubmit({\n        cung: selected_cung,\n        cungVi: (_selected_cungVi = selected_cungVi) === null || _selected_cungVi === void 0 ? void 0 : _selected_cungVi.id,\n        chinhTinhs: onlyId(selected_chinhTinhs),\n        phuTinhs: onlyId(selected_phuTinhs)\n      });\n    }\n  }, \"Xem K\\u1EBFt Qu\\u1EA3\"))));\n};\n\nexport default createKetQuas;\n\nfunction onlyId(array) {\n  if (!array) return [];\n  let result = [];\n  array.map(item => result.push(item.id));\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}
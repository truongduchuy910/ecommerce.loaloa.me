{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/createKetQua.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst createKetQuas = ({\n  laSoTuVi,\n  onCreate\n}) => {\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter(); //\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // alert\n\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\"); //\n\n  const {\n    0: autocomplete,\n    1: setAuto\n  } = useState(false); // autocomplete = true data from \"laSoTuVi\"\n\n  const {\n    0: DX,\n    1: setDX\n  } = useState();\n  const {\n    0: T1,\n    1: setT1\n  } = useState();\n  const {\n    0: T2,\n    1: setT2\n  } = useState();\n  const {\n    0: XC,\n    1: setXC\n  } = useState(); // // autocomplete = false data from child state\n\n  const {\n    0: C,\n    1: setC\n  } = useState();\n  const {\n    0: CV,\n    1: setCV\n  } = useState();\n  const {\n    0: CT,\n    1: setCT\n  } = useState([]);\n  const {\n    0: PT,\n    1: setPT\n  } = useState([]);\n  const {\n    0: PTT1,\n    1: setPTT1\n  } = useState([]);\n  const {\n    0: PTT2,\n    1: setPTT2\n  } = useState([]);\n  const {\n    0: PTXC,\n    1: setPTXC\n  } = useState([]);\n  useEffect(() => {});\n\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let {\n        DX,\n        T1,\n        T2,\n        XC\n      } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: {\n        id: C === null || C === void 0 ? void 0 : C.id\n      },\n      cungVi: {\n        id: CV === null || CV === void 0 ? void 0 : CV.id\n      },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(PT.concat(PTT1).concat(PTT2).concat(PTXC))\n    };\n\n    try {\n      const {\n        data\n      } = await createKetQua({\n        variables\n      });\n      onCreate(data === null || data === void 0 ? void 0 : data.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(Cung, {\n    onChange: handleCungChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(CungVi, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CV: CV,\n    setCV: setCV,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(AllChinhTinhs, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CT: CT,\n    setCT: setCT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    setCung: setDX,\n    PT: PT,\n    setPT: setPT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false,\n    cung: autocomplete ? T1 : false,\n    setCung: setT1,\n    PT: PTT1,\n    setPT: setPTT1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false,\n    cung: autocomplete ? T2 : false,\n    setCung: setT2,\n    PT: PTT2,\n    setPT: setPTT2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false,\n    cung: autocomplete ? XC : false,\n    setCung: setXC,\n    PT: PTXC,\n    setPT: setPTXC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, loading ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, __jsx(CircularProgress, {\n    size: 24.5,\n    color: \"secondary\",\n    style: {\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), \" \", \"Vui l\\xF2ng \\u0111\\u1EE3i\") : \"Xem Kết Quả\"))), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: alertOpen,\n    onClose: alertClose,\n    autoHideDuration: 3000,\n    message: alertMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default createKetQuas;\n\nfunction WhereUniqueInput(array) {\n  if (!array) return [];\n  let result = [];\n  array.map(item => result.push({\n    id: item.id\n  }));\n  return result;\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/createKetQua.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Snackbar","CircularProgress","useState","useEffect","useRouter","gql","useMutation","Cung","CungVi","AllChinhTinhs","AllPhuTinhs","layCung","getErrorMessage","createKetQuaMutation","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","onCreate","createKetQua","router","loading","setLoading","alertOpen","setAlertOpen","React","alertMessage","setAlertMessage","autocomplete","setAuto","DX","setDX","T1","setT1","T2","setT2","XC","setXC","C","setC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","handleCungChange","cung","thapNhiCung","handleChangeCheckBox","event","target","checked","handleSubmit","variables","id","cungVi","chinhTinhs","WhereUniqueInput","phuTinhs","concat","data","error","push","alertClose","reason","classes","cungChu","marginRight","vertical","horizontal","array","result","map","item"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\n\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\nconst createKetQuas = ({ laSoTuVi, onCreate }) => {\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n\n  //\n  const [loading, setLoading] = useState(false);\n  // alert\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  //\n  const [autocomplete, setAuto] = useState(false);\n  // autocomplete = true data from \"laSoTuVi\"\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false data from child state\n  const [C, setC] = useState();\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState([]);\n  const [PT, setPT] = useState([]);\n  const [PTT1, setPTT1] = useState([]);\n  const [PTT2, setPTT2] = useState([]);\n  const [PTXC, setPTXC] = useState([]);\n\n  useEffect(() => {});\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: { id: C?.id },\n      cungVi: { id: CV?.id },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(\n        PT.concat(PTT1)\n          .concat(PTT2)\n          .concat(PTXC)\n      ),\n    };\n    try {\n      const { data } = await createKetQua({\n        variables,\n      });\n      onCreate(data?.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Cung onChange={handleCungChange} />\n        </Grid>\n        <Grid item xs={12}>\n          <CungVi\n            cung={autocomplete ? DX : false}\n            setCung={setDX}\n            CV={CV}\n            setCV={setCV}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllChinhTinhs\n            cung={autocomplete ? DX : false}\n            setCung={setDX}\n            CT={CT}\n            setCT={setCT}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs cung={DX} setCung={setDX} PT={PT} setPT={setPT} />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T1 ? \"Tam hợp \" + T1.cungChu : false}\n            cung={autocomplete ? T1 : false}\n            setCung={setT1}\n            PT={PTT1}\n            setPT={setPTT1}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T2 ? \"Tam hợp \" + T2.cungChu : false}\n            cung={autocomplete ? T2 : false}\n            setCung={setT2}\n            PT={PTT2}\n            setPT={setPTT2}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={XC ? \"Xung chiếu \" + XC.cungChu : false}\n            cung={autocomplete ? XC : false}\n            setCung={setXC}\n            PT={PTXC}\n            setPT={setPTXC}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={autocomplete}\n                onChange={handleChangeCheckBox}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Tự động điền từ lá sô?\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={handleSubmit}\n          >\n            {loading ? (\n              <React.Fragment>\n                <CircularProgress\n                  size={24.5}\n                  color=\"secondary\"\n                  style={{ marginRight: 15 }}\n                />{\" \"}\n                Vui lòng đợi\n              </React.Fragment>\n            ) : (\n              \"Xem Kết Quả\"\n            )}\n          </Button>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={alertOpen}\n        onClose={alertClose}\n        autoHideDuration={3000}\n        message={alertMessage}\n      />\n    </Paper>\n  );\n};\nexport default createKetQuas;\nfunction WhereUniqueInput(array) {\n  if (!array) return [];\n  let result = [];\n  array.map((item) => result.push({ id: item.id }));\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}
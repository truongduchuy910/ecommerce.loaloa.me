{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/apps/loaloa/app/components/customers.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($limit: Int) {\\n    allCustomers(first: $limit) {\\n      id\\n      name\\n      phone\\n      address\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nvar query = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\nexport default function CustomerItem() {\n  var classes = useStyles();\n\n  var _useQuery = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      refetch = _useQuery.refetch;\n\n  var allCustomers = data === null || data === void 0 ? void 0 : data.allCustomers;\n  return __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xECm t\\xEAn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xECm \\u0110T\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\u0110\\u1ECBa ch\\u1EC9\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, (allCustomers === null || allCustomers === void 0 ? void 0 : allCustomers.length) ? allCustomers.map(function (customer) {\n    return __jsx(TableRow, {\n      key: customer.id,\n      hover: true,\n      onClick: function onClick() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, customer.name), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, customer.phone), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, customer.address));\n  }) : null)));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/customers.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","SearchIcon","formatMoney","gql","useQuery","query","useStyles","theme","root","padding","spacing","marginBottom","CustomerItem","classes","variables","limit","data","loading","error","fetchMore","refetch","allCustomers","length","map","customer","id","name","phone","address"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst query = gql`\n  query($limit: Int) {\n    allCustomers(first: $limit) {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function CustomerItem() {\n  const classes = useStyles();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allCustomers = data?.allCustomers;\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Tìm tên\"\n              />\n            </TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Tìm ĐT\"\n              />\n            </TableCell>\n            <TableCell>Địa chỉ</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allCustomers?.length\n            ? allCustomers.map((customer) => (\n                <TableRow key={customer.id} hover onClick={() => {}}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {customer.name}\n                  </TableCell>\n                  <TableCell>{customer.phone}</TableCell>\n                  <TableCell>{customer.address}</TableCell>\n                </TableRow>\n              ))\n            : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
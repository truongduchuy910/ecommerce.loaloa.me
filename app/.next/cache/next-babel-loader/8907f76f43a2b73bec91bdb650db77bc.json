{"ast":null,"code":"var __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { request } from \"graphql-request\";\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport Link from \"../../src/Link\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let {\n    0: username,\n    1: setUserName\n  } = useState(\"\");\n  let {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  let {\n    0: buttonStatus,\n    1: setButtonStatus\n  } = useState(\"Đăng nhập\");\n\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(getGraphUri(), `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n      }\n      }}`, {\n        username,\n        password\n      });\n      let {\n        authenticateUserWithPassword\n      } = response;\n\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: {\n            id,\n            email\n          }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({\n          token,\n          id,\n          email\n        });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n\n  return __jsx(Layout, null, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      height: \"95vh\"\n    }\n  }, __jsx(Paper, {\n    elevation: 1,\n    style: {\n      padding: 21,\n      borderRadius: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    sm: 12,\n    sm: 5\n  }, __jsx(\"img\", {\n    src: \"/img/logo.png\",\n    style: {\n      width: \"80%\",\n      maxWidth: 250\n    }\n  })), __jsx(Grid, {\n    item: true,\n    sm: 12,\n    sm: 7\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: e => {\n      setUserName(e.target.value);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: async () => await loginButtonClick()\n  }, buttonStatus)))))))));\n}","map":null,"metadata":{},"sourceType":"module"}
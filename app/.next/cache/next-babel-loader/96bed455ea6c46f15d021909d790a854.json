{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/apps/loaloa/app/components/Customers.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($limit: Int) {\\n    allCustomers(first: $limit) {\\n      id\\n      name\\n      phone\\n      address\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment, Button, Fab, Drawer } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\nvar query = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      maxWidth: 500\n    }\n  };\n});\nexport default function Customer(_ref) {\n  var onClick = _ref.onClick;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      drawer = _useState[0],\n      setDrawer = _useState[1];\n\n  var _useState2 = useState(),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useQuery = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      refetch = _useQuery.refetch;\n\n  var allCustomers = data === null || data === void 0 ? void 0 : data.allCustomers;\n\n  function handleClick(event, value) {\n    onClick();\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setDrawer(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), __jsx(Drawer, {\n    open: drawer,\n    onClose: function onClose() {\n      return setDrawer(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"\\u0110i\\u1EC7n tho\\u1EA1i\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xEAn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Th\\xEAm\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\\u0110i\\u1EC7n tho\\u1EA1i\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\u0110\\u1ECBa ch\\u1EC9\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, (allCustomers === null || allCustomers === void 0 ? void 0 : allCustomers.length) ? allCustomers.map(function (customer) {\n    return __jsx(TableRow, {\n      key: customer.id,\n      hover: true,\n      onClick: function onClick() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, customer.name), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, customer.phone), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, customer.address));\n  }) : null))))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/Customers.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","Button","Fab","Drawer","EditIcon","AddIcon","SearchIcon","formatMoney","gql","useQuery","useState","query","useStyles","theme","root","padding","spacing","marginBottom","maxWidth","Customer","onClick","classes","drawer","setDrawer","id","setId","name","setName","phone","setPhone","address","setAddress","variables","limit","data","loading","error","fetchMore","refetch","allCustomers","handleClick","event","value","length","map","customer"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Button,\n  Fab,\n  Drawer,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\n\nconst query = gql`\n  query($limit: Int) {\n    allCustomers(first: $limit) {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    maxWidth: 500,\n  },\n}));\nexport default function Customer({ onClick }) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [id, setId] = useState();\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  const [address, setAddress] = useState();\n\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allCustomers = data?.allCustomers;\n  function handleClick(event, value) {\n    onClick();\n  }\n  return (\n    <React.Fragment>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"small\"\n        onClick={() => setDrawer(true)}\n      >\n        <EditIcon />\n      </Fab>\n      <Drawer open={drawer} onClose={() => setDrawer(false)}>\n        <Paper className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Điện thoại\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Tên\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Địa chỉ\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={handleClick}\n              >\n                Thêm\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <TableContainer>\n                <Table aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Tên</TableCell>\n                      <TableCell>Điện thoại</TableCell>\n                      <TableCell>Địa chỉ</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {allCustomers?.length\n                      ? allCustomers.map((customer) => (\n                          <TableRow key={customer.id} hover onClick={() => {}}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {customer.name}\n                            </TableCell>\n                            <TableCell>{customer.phone}</TableCell>\n                            <TableCell>{customer.address}</TableCell>\n                          </TableRow>\n                        ))\n                      : null}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/loaloa.me/app/pages/login.js\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\n\nfunction Login() {\n  var _useState = useState(false),\n      username = _useState[0],\n      setUserName = _useState[1];\n\n  var _useState2 = useState(false),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"Đăng nhập\"),\n      buttonStatus = _useState3[0],\n      setButtonStatus = _useState3[1];\n\n  function loginButtonClick() {\n    var response, authenticateUserWithPassword, token, _authenticateUserWith, id, email, isAdmin, isSupporter, isCustomer;\n\n    return _regeneratorRuntime.async(function loginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setButtonStatus(\"Vui lòng đợi...\");\n\n            if (!(username.length > 5 && password.length > 5)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request({\n              body: {\n                query: \"mutation($username: String, $password: String) {\\n      authenticateUserWithPassword(email: $username, password: $password) {\\n      token\\n      item {\\n          id\\n          email\\n          isAdmin\\n          isSupporter\\n          isCustomer\\n      }\\n      }}\",\n                variables: {\n                  username: username,\n                  password: password\n                }\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            authenticateUserWithPassword = response.data.authenticateUserWithPassword;\n\n            if (authenticateUserWithPassword) {\n              token = authenticateUserWithPassword.token, _authenticateUserWith = authenticateUserWithPassword.item, id = _authenticateUserWith.id, email = _authenticateUserWith.email, isAdmin = _authenticateUserWith.isAdmin, isSupporter = _authenticateUserWith.isSupporter, isCustomer = _authenticateUserWith.isCustomer;\n              setButtonStatus(\"Đang điều hướng...!\");\n              login({\n                token: token,\n                id: id,\n                email: email,\n                isAdmin: isAdmin,\n                isSupporter: isSupporter,\n                isCustomer: isCustomer\n              });\n            } else {\n              setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            setButtonStatus(\"Kiểm tra và thử lại\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/truongduchuy910/apps/loaloa.me/app/pages/login.js"],"names":["useState","Grid","TextField","Button","Container","Layout","LightBoard","login","Link","Logo","Typography","React","Component","FacebookProvider","Comments","CustomChat","request","Login","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","body","query","variables","response","authenticateUserWithPassword","data","token","item","id","email","isAdmin","isSupporter","isCustomer","padding"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,gBAAvD;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,KAAT,GAAiB;AAAA,kBACiBjB,QAAQ,CAAC,KAAD,CADzB;AAAA,MACRkB,QADQ;AAAA,MACEC,WADF;;AAAA,mBAEiBnB,QAAQ,CAAC,KAAD,CAFzB;AAAA,MAERoB,QAFQ;AAAA,MAEEC,WAFF;;AAAA,mBAGyBrB,QAAQ,CAAC,WAAD,CAHjC;AAAA,MAGRsB,YAHQ;AAAA,MAGMC,eAHN;;AAIf,WAAeC,gBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACED,YAAAA,eAAe,CAAC,iBAAD,CAAf;;AADF,kBAEML,QAAQ,CAACO,MAAT,GAAkB,CAAlB,IAAuBL,QAAQ,CAACK,MAAT,GAAkB,CAF/C;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGyBT,OAAO,CAAC;AAC3BU,cAAAA,IAAI,EAAE;AACJC,gBAAAA,KAAK,8QADD;AAYJC,gBAAAA,SAAS,EAAE;AACTV,kBAAAA,QAAQ,EAARA,QADS;AAETE,kBAAAA,QAAQ,EAARA;AAFS;AAZP;AADqB,aAAD,CAHhC;;AAAA;AAGQS,YAAAA,QAHR;AAwBcC,YAAAA,4BAxBd,GAyBQD,QAzBR,CAwBME,IAxBN,CAwBcD,4BAxBd;;AA0BI,gBAAIA,4BAAJ,EAAkC;AAE9BE,cAAAA,KAF8B,GAI5BF,4BAJ4B,CAE9BE,KAF8B,0BAI5BF,4BAJ4B,CAG9BG,IAH8B,EAGtBC,EAHsB,yBAGtBA,EAHsB,EAGlBC,KAHkB,yBAGlBA,KAHkB,EAGXC,OAHW,yBAGXA,OAHW,EAGFC,WAHE,yBAGFA,WAHE,EAGWC,UAHX,yBAGWA,UAHX;AAKhCf,cAAAA,eAAe,CAAC,qBAAD,CAAf;AACAhB,cAAAA,KAAK,CAAC;AAAEyB,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,EAAE,EAAFA,EAAT;AAAaC,gBAAAA,KAAK,EAALA,KAAb;AAAoBC,gBAAAA,OAAO,EAAPA,OAApB;AAA6BC,gBAAAA,WAAW,EAAXA,WAA7B;AAA0CC,gBAAAA,UAAU,EAAVA;AAA1C,eAAD,CAAL;AACD,aAPD,MAOO;AACLf,cAAAA,eAAe,CAAC,kCAAD,CAAf;AACD;;AAnCL;AAAA;;AAAA;AAqCIA,YAAAA,eAAe,CAAC,qBAAD,CAAf;;AArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwCA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACD,eAAetB,KAAf","sourcesContent":["import { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\n\nfunction Login() {\n  const [username, setUserName] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request({\n        body: {\n          query: `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n          variables: {\n            username,\n            password\n          }\n        }\n      });\n\n      let {\n        data: { authenticateUserWithPassword }\n      } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email, isAdmin, isSupporter, isCustomer }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({ token, id, email, isAdmin, isSupporter, isCustomer });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <Layout>\n      <Container maxWidth=\"sm\" style={{ padding: 8 }}></Container>\n    </Layout>\n  );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/chinhTinhs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layChinhTinhs } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allChinhTinhs: allTinhs {\n      id\n      name\n    }\n  }\n`;\nexport default function chinhTinhs({\n  cung,\n  CT,\n  setCT\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query);\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n  console.log(CT);\n\n  if (CT == [] && (data === null || data === void 0 ? void 0 : data.allChinhTinhs) && cung) {\n    setCT(layChinhTinhs({\n      allChinhTinhs: data.allChinhTinhs,\n      cung\n    }).CT);\n  }\n\n  return (data === null || data === void 0 ? void 0 : data.allChinhTinhs) && !loading ? __jsx(Autocomplete, {\n    value: CT || \"\",\n    onChange: (event, value) => {\n      setCT(value);\n    },\n    multiple: true,\n    size: \"small\",\n    options: data.allChinhTinhs,\n    getOptionLabel: option => {\n      if (option) return option.name;\n    },\n    filterSelectedOptions: true,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      variant: \"outlined\",\n      label: \"Ch\\xEDnh Tinh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/chinhTinhs.js"],"names":["TextField","Autocomplete","Skeleton","useState","useEffect","useRouter","gql","useQuery","layChinhTinhs","query","chinhTinhs","cung","CT","setCT","data","loading","error","shouldRedirect","router","push","console","log","allChinhTinhs","event","value","option","name","params"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,MAAMC,KAAK,GAAGH,GAAI;;;;;;;CAAlB;AAQA,eAAe,SAASI,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA;AAAZ,CAApB,EAAyC;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACE,KAAD,CAAzC;AACA,QAAMQ,cAAc,GAAG,EAAEF,OAAO,IAAID,IAAb,CAAvB;AACA,QAAMI,MAAM,GAAGb,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,cAAJ,EAAoB;AAClBC,MAAAA,MAAM,CAACC,IAAP,CAAY,SAAZ;AACD;AACF,GAJQ,EAIN,CAACF,cAAD,CAJM,CAAT;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;;AACA,MAAIA,EAAE,IAAI,EAAN,KAAYE,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEQ,aAAlB,KAAmCX,IAAvC,EAA6C;AAC3CE,IAAAA,KAAK,CAACL,aAAa,CAAC;AAAEc,MAAAA,aAAa,EAAER,IAAI,CAACQ,aAAtB;AAAqCX,MAAAA;AAArC,KAAD,CAAb,CAA2DC,EAA5D,CAAL;AACD;;AAED,SAAO,CAAAE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,aAAN,KAAuB,CAACP,OAAxB,GACL,MAAC,YAAD;AACE,IAAA,KAAK,EAAEH,EAAE,IAAI,EADf;AAEE,IAAA,QAAQ,EAAE,CAACW,KAAD,EAAQC,KAAR,KAAkB;AAC1BX,MAAAA,KAAK,CAACW,KAAD,CAAL;AACD,KAJH;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,OAAO,EAAEV,IAAI,CAACQ,aAPhB;AAQE,IAAA,cAAc,EAAGG,MAAD,IAAY;AAC1B,UAAIA,MAAJ,EAAY,OAAOA,MAAM,CAACC,IAAd;AACb,KAVH;AAWE,IAAA,qBAAqB,MAXvB;AAYE,IAAA,WAAW,EAAGC,MAAD,IACX,MAAC,SAAD,eAAeA,MAAf;AAAuB,MAAA,OAAO,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAkBL,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,MAAlB;AAAyB,IAAA,MAAM,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF;AAoBD","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layChinhTinhs } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allChinhTinhs: allTinhs {\n      id\n      name\n    }\n  }\n`;\nexport default function chinhTinhs({ cung, CT, setCT }) {\n  const { data, loading, error } = useQuery(query);\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n  console.log(CT);\n  if (CT == [] && data?.allChinhTinhs && cung) {\n    setCT(layChinhTinhs({ allChinhTinhs: data.allChinhTinhs, cung }).CT);\n  }\n\n  return data?.allChinhTinhs && !loading ? (\n    <Autocomplete\n      value={CT || \"\"}\n      onChange={(event, value) => {\n        setCT(value);\n      }}\n      multiple\n      size=\"small\"\n      options={data.allChinhTinhs}\n      getOptionLabel={(option) => {\n        if (option) return option.name;\n      }}\n      filterSelectedOptions\n      renderInput={(params) => (\n        <TextField {...params} variant=\"outlined\" label=\"ChÃ­nh Tinh\" />\n      )}\n    />\n  ) : (\n    <Skeleton variant=\"rect\" height={40} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
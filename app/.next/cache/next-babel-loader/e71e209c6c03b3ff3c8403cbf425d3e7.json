{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/loaloa.me/app/pages/login.js\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\nimport getGraphUri from \"../utils/getGraphUri\";\n\nfunction Login() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"Đăng nhập\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonStatus = _useState6[0],\n      setButtonStatus = _useState6[1]; //---------------------------------------\n\n\n  function loginButtonClick() {\n    var response, authenticateUserWithPassword, token, _authenticateUserWith, id, email, isAdmin, isSupporter, isCustomer;\n\n    return _regeneratorRuntime.async(function loginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setButtonStatus(\"Vui lòng đợi...\");\n\n            if (!(username.length > 5 && password.length > 5)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request(getGraphUri(), \"mutation($username: String, $password: String) {\\n      authenticateUserWithPassword(email: $username, password: $password) {\\n      token\\n      item {\\n          id\\n          email\\n          isAdmin\\n          isSupporter\\n          isCustomer\\n      }\\n      }}\", {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            response = _context.sent;\n            authenticateUserWithPassword = response.authenticateUserWithPassword;\n\n            if (authenticateUserWithPassword) {\n              token = authenticateUserWithPassword.token, _authenticateUserWith = authenticateUserWithPassword.item, id = _authenticateUserWith.id, email = _authenticateUserWith.email, isAdmin = _authenticateUserWith.isAdmin, isSupporter = _authenticateUserWith.isSupporter, isCustomer = _authenticateUserWith.isCustomer;\n              setButtonStatus(\"Đang điều hướng...!\");\n              login({\n                token: token,\n                id: id,\n                email: email,\n                isAdmin: isAdmin,\n                isSupporter: isSupporter,\n                isCustomer: isCustomer\n              });\n            } else {\n              setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            setButtonStatus(\"Kiểm tra và thử lại\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/truongduchuy910/apps/loaloa.me/app/pages/login.js"],"names":["Grid","TextField","Button","Container","Layout","LightBoard","login","Link","Logo","Typography","React","Component","FacebookProvider","Comments","CustomChat","request","getGraphUri","Login","useState","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","response","authenticateUserWithPassword","token","item","id","email","isAdmin","isSupporter","isCustomer","padding"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,gBAAvD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,SAASC,KAAT,GAAiB;AAAA,kBACeC,QAAQ,CAAC,KAAD,CADvB;AAAA;AAAA,MACVC,QADU;AAAA,MACAC,WADA;;AAAA,mBAEeF,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,MAEVG,QAFU;AAAA,MAEAC,WAFA;;AAAA,mBAGuBJ,QAAQ,CAAC,WAAD,CAH/B;AAAA;AAAA,MAGVK,YAHU;AAAA,MAGIC,eAHJ,kBAIf;;;AACA,WAAeC,gBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACED,YAAAA,eAAe,CAAC,iBAAD,CAAf;;AADF,kBAEML,QAAQ,CAACO,MAAT,GAAkB,CAAlB,IAAuBL,QAAQ,CAACK,MAAT,GAAkB,CAF/C;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGyBX,OAAO,CAC1BC,WAAW,EADe,gRAa1B;AACEG,cAAAA,QAAQ,EAARA,QADF;AAEEE,cAAAA,QAAQ,EAARA;AAFF,aAb0B,CAHhC;;AAAA;AAGQM,YAAAA,QAHR;AAuBOC,YAAAA,4BAvBP,GAwBQD,QAxBR,CAuBOC,4BAvBP;;AAyBI,gBAAIA,4BAAJ,EAAkC;AAE9BC,cAAAA,KAF8B,GAI5BD,4BAJ4B,CAE9BC,KAF8B,0BAI5BD,4BAJ4B,CAG9BE,IAH8B,EAGtBC,EAHsB,yBAGtBA,EAHsB,EAGlBC,KAHkB,yBAGlBA,KAHkB,EAGXC,OAHW,yBAGXA,OAHW,EAGFC,WAHE,yBAGFA,WAHE,EAGWC,UAHX,yBAGWA,UAHX;AAKhCX,cAAAA,eAAe,CAAC,qBAAD,CAAf;AACAlB,cAAAA,KAAK,CAAC;AAAEuB,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,EAAE,EAAFA,EAAT;AAAaC,gBAAAA,KAAK,EAALA,KAAb;AAAoBC,gBAAAA,OAAO,EAAPA,OAApB;AAA6BC,gBAAAA,WAAW,EAAXA,WAA7B;AAA0CC,gBAAAA,UAAU,EAAVA;AAA1C,eAAD,CAAL;AACD,aAPD,MAOO;AACLX,cAAAA,eAAe,CAAC,kCAAD,CAAf;AACD;;AAlCL;AAAA;;AAAA;AAoCIA,YAAAA,eAAe,CAAC,qBAAD,CAAf;;AApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuCA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACD,eAAenB,KAAf","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments, CustomChat } from \"react-facebook\";\nimport { request } from \"graphql-request\";\nimport getGraphUri from \"../utils/getGraphUri\";\n\nfunction Login() {\n  let [username, setUserName] = useState(false);\n  let [password, setPassword] = useState(false);\n  let [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  //---------------------------------------\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(\n        getGraphUri(),\n        `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n        {\n          username,\n          password\n        }\n      );\n\n      let {\n         authenticateUserWithPassword \n      } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email, isAdmin, isSupporter, isCustomer }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({ token, id, email, isAdmin, isSupporter, isCustomer });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <Layout>\n      <Container maxWidth=\"sm\" style={{ padding: 8 }}></Container>\n    </Layout>\n  );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { request } from \"graphql-request\";\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport Link from \"../../src/Link\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUserName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"Đăng nhập\"),\n      buttonStatus = _useState3[0],\n      setButtonStatus = _useState3[1];\n\n  function loginButtonClick() {\n    var response, authenticateUserWithPassword, token, _authenticateUserWith, id, email;\n\n    return _regeneratorRuntime.async(function loginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setButtonStatus(\"Vui lòng đợi...\");\n\n            if (!(username.length > 5 && password.length > 5)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request(getGraphUri(), \"mutation($username: String, $password: String) {\\n      authenticateUserWithPassword(email: $username, password: $password) {\\n      token\\n      item {\\n          id\\n          email\\n      }\\n      }}\", {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            response = _context.sent;\n            authenticateUserWithPassword = response.authenticateUserWithPassword;\n\n            if (authenticateUserWithPassword) {\n              token = authenticateUserWithPassword.token, _authenticateUserWith = authenticateUserWithPassword.item, id = _authenticateUserWith.id, email = _authenticateUserWith.email;\n              setButtonStatus(\"Đang điều hướng...!\");\n              login({\n                token: token,\n                id: id,\n                email: email\n              });\n            } else {\n              setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            setButtonStatus(\"Kiểm tra và thử lại\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      height: \"95vh\"\n    }\n  }, __jsx(Paper, {\n    elevation: 1,\n    style: {\n      padding: 21,\n      borderRadius: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Grid, _defineProperty({\n    item: true,\n    sm: 12\n  }, \"sm\", 5), __jsx(\"img\", {\n    src: \"/img/logo.png\",\n    style: {\n      width: \"80%\",\n      maxWidth: 250\n    }\n  })), __jsx(Grid, _defineProperty({\n    item: true,\n    sm: 12\n  }, \"sm\", 7), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: function onChange(e) {\n      setUserName(e.target.value);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(loginButtonClick());\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }, buttonStatus)))))))));\n}","map":null,"metadata":{},"sourceType":"module"}
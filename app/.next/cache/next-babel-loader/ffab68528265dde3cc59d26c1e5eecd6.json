{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/apps/loaloa/app/components/products.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($limit: Int) {\\n    allProducts(first: $limit) {\\n      id\\n      image {\\n        publicUrl\\n      }\\n      images {\\n        file {\\n          publicUrl\\n        }\\n      }\\n      name\\n      price\\n      sale\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment, Fab, Drawer } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useState } from \"react\";\nvar query = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      height: \"70vh\"\n    }\n  };\n});\nexport default function ProductItem() {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      drawer = _useState[0],\n      setDrawer = _useState[1];\n\n  var _useQuery = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      refetch = _useQuery.refetch;\n\n  var allProducts = data === null || data === void 0 ? void 0 : data.allProducts;\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Drawer, {\n    open: drawer,\n    onClose: function onClose() {\n      return setDrawer(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xECm ki\\u1EBFm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u1EA2nh\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"T\\u1ED3n\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Gi\\xE1\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Gi\\u1EA3m\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, (allProducts === null || allProducts === void 0 ? void 0 : allProducts.length) ? allProducts.map(function (product) {\n    return __jsx(TableRow, {\n      key: product.id,\n      hover: true,\n      onClick: function onClick() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      style: {\n        maxWidth: \"100%\",\n        maxHeight: 40,\n        margin: 0\n      },\n      src: product.image ? product.image.publicUrl : product.images[0].file.publicUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, product.name), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, product.quantity), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, formatMoney(product.price, 0)), __jsx(TableCell, {\n      align: \"right\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"- \", formatMoney(product.sale, 0), \" \\u0111\")));\n  }) : null))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/products.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","Fab","Drawer","SearchIcon","formatMoney","gql","useQuery","AddIcon","useState","query","useStyles","theme","root","padding","spacing","marginBottom","height","ProductItem","classes","drawer","setDrawer","variables","limit","data","loading","error","fetchMore","refetch","allProducts","length","map","product","id","maxWidth","maxHeight","margin","image","publicUrl","images","file","name","quantity","price","sale"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Fab,\n  Drawer,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useState } from \"react\";\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    height: \"70vh\",\n  },\n}));\nexport default function ProductItem() {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allProducts = data?.allProducts;\n  return (\n    <React.Fragment>\n      <Drawer open={drawer} onClose={() => setDrawer(false)}>\n        <Paper className={classes.root}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Tìm kiếm\"\n          />\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ảnh</TableCell>\n                  <TableCell>Tên</TableCell>\n                  <TableCell align=\"right\">Tồn</TableCell>\n                  <TableCell align=\"right\">Giá</TableCell>\n                  <TableCell align=\"right\">Giảm</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {allProducts?.length\n                  ? allProducts.map((product) => (\n                      <TableRow key={product.id} hover onClick={() => {}}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <img\n                            style={{\n                              maxWidth: \"100%\",\n                              maxHeight: 40,\n                              margin: 0,\n                            }}\n                            src={\n                              product.image\n                                ? product.image.publicUrl\n                                : product.images[0].file.publicUrl\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>{product.name}</TableCell>\n                        <TableCell>{product.quantity}</TableCell>\n                        <TableCell align=\"right\">\n                          {formatMoney(product.price, 0)}\n                        </TableCell>\n                        <TableCell align=\"right\" color=\"textSecondary\">\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            - {formatMoney(product.sale, 0)} đ\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
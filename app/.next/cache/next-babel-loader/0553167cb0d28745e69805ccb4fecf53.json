{"ast":null,"code":"import { cache } from \"./client\";\nimport { makeVar, gql } from \"@apollo/client\";\nexport const USER = gql`\n  query {\n    user @client\n  }\n`;\nexport const CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport const WISHLIST = gql`\n  query {\n    wishlist @client\n  }\n`;\nexport const COMPARE = gql`\n  query {\n    compare @client\n  }\n`;\nexport const CUSTOMER = gql`\n  query {\n    customer @client\n  }\n`; // initialize\n\nexport const init = () => {\n  console.log(\"reload cache\");\n  cache.writeQuery({\n    query: USER,\n    data: {\n      user: false ? JSON.parse(localStorage.getItem(\"user\")) : {\n        id: null,\n        email: null,\n        isAdmin: null,\n        isSeller: null\n      }\n    }\n  });\n  cache.writeQuery({\n    query: CART,\n    data: {\n      cartItems: false ? JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: COMPARE,\n    data: {\n      compare: false ? JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: WISHLIST,\n    data: {\n      wishlist: false ? JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: CUSTOMER,\n    data: {\n      customer: {\n        phone: null,\n        name: null,\n        address: null\n      }\n    }\n  });\n};\n\nconst modifyUser = ({\n  user\n}) => {\n  if (false) {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n\n    cache.modify({\n      fields: {\n        user() {\n          return user;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCart = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"cartItems\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        cartItems() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyWishlist = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"wishlist\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        wishlist() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCompare = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"compare\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        compare() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCustomer = ({\n  customer\n}) => {\n  if (false) {\n    if (customer) {\n      localStorage.setItem(\"customer\", JSON.stringify(customer));\n    } else {\n      localStorage.removeItem(\"customer\");\n    }\n\n    cache.modify({\n      fields: {\n        customer() {\n          return customer;\n        }\n\n      }\n    });\n  }\n};\n/* \n    you can use client variable below\n*/\n\n\nexport const emptyCompare = () => {\n  modifyCompare({\n    items: []\n  });\n};\nexport const removeCompareItem = function (removeItem) {\n  let products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  products.map(product => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyCompare({\n    items\n  });\n};\nexport function addProductToLocalCompare(newProduct) {\n  // get\n  let products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let others = [];\n  products.map(product => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct]; // save\n\n  modifyCompare({\n    items\n  });\n}\nexport const onSignIn = ({\n  user\n}) => {\n  modifyUser({\n    user\n  });\n};\nexport const onSignOut = () => {\n  modifyUser({\n    user: null\n  });\n};\nexport const chooseCustomer = ({\n  customer\n}) => {\n  modifyCustomer({\n    customer\n  });\n};\nexport const emptyCart = function () {\n  modifyCart({\n    items: []\n  });\n};\nexport const removeCartItem = removeItem => {\n  // get\n  const cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data; // change\n\n  let items = [];\n  cartItems.map(item => {\n    if (item.product.id !== removeItem.product.id) items.push(item);\n  });\n  modifyCart({\n    items\n  });\n};\nexport const changeCartItem = function (cartItem, change) {\n  // get\n  let cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  const price = cartItem.product.price - cartItem.product.sale;\n  cartItems.map((item, index) => {\n    const quantity = item.quantity + change > 0 ? item.quantity + change : item.quantity;\n\n    if (item.product.id !== cartItem.product.id) {\n      items.push(item);\n    } else {\n      items.push({\n        product: item.product,\n        quantity,\n        price: price * quantity\n      });\n    }\n  }); // save\n\n  modifyCart({\n    items\n  });\n};\nexport function addProductToLocalCart({\n  product,\n  variables\n}) {\n  // get\n  let cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  let exist = false;\n  const price = product.price - product.sale;\n  cartItems.map(cartItem => {\n    if (cartItem.product.id !== product.id) {\n      items.push(cartItem);\n    } else {\n      exist = true;\n      items.push({\n        product: cartItem.product,\n        quantity: cartItem.quantity + 1,\n        price: price * (cartItem.quantity + 1)\n      });\n    }\n  });\n  if (exist === false) items.push({\n    product,\n    quantity: 1,\n    price\n  }); // save\n\n  modifyCart({\n    items\n  });\n}\nexport const emptyWishlist = function () {\n  modifyWishlist({\n    items: []\n  });\n};\nexport const removeWishListItem = function (removeItem) {\n  let products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  products.map(product => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyWishlist({\n    items\n  });\n};\nexport function addProductToLocalWishlist(newProduct) {\n  // get\n  let products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let others = [];\n  products.map(product => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct]; // save\n\n  modifyWishlist({\n    items\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/ecommerce/app/apollo/action.js"],"names":["cache","makeVar","gql","USER","CART","WISHLIST","COMPARE","CUSTOMER","init","console","log","writeQuery","query","data","user","JSON","parse","localStorage","getItem","id","email","isAdmin","isSeller","cartItems","compare","wishlist","customer","phone","name","address","modifyUser","setItem","stringify","removeItem","modify","fields","modifyCart","items","modifyWishlist","modifyCompare","modifyCustomer","emptyCompare","removeCompareItem","products","map","product","push","addProductToLocalCompare","newProduct","others","onSignIn","onSignOut","chooseCustomer","emptyCart","removeCartItem","item","changeCartItem","cartItem","change","price","sale","index","quantity","addProductToLocalCart","variables","exist","emptyWishlist","removeWishListItem","addProductToLocalWishlist"],"mappings":"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","sourcesContent":["import { cache } from \"./client\";\nimport { makeVar, gql } from \"@apollo/client\";\n\nexport const USER = gql`\n  query {\n    user @client\n  }\n`;\nexport const CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport const WISHLIST = gql`\n  query {\n    wishlist @client\n  }\n`;\nexport const COMPARE = gql`\n  query {\n    compare @client\n  }\n`;\nexport const CUSTOMER = gql`\n  query {\n    customer @client\n  }\n`;\n// initialize\nexport const init = () => {\n  console.log(\"reload cache\");\n \n  cache.writeQuery({\n    query: USER,\n\n    data: {\n      user:\n        typeof window !== \"undefined\"\n          ? JSON.parse(localStorage.getItem(\"user\"))\n          : { id: null, email: null, isAdmin: null, isSeller: null },\n    },\n  });\n\n  cache.writeQuery({\n    query: CART,\n    data: {\n      cartItems:\n        typeof window !== \"undefined\"\n          ? JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }')\n              .data\n          : null,\n    },\n  });\n  cache.writeQuery({\n    query: COMPARE,\n    data: {\n      compare:\n        typeof window !== \"undefined\"\n          ? JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data\n          : null,\n    },\n  });\n  cache.writeQuery({\n    query: WISHLIST,\n    data: {\n      wishlist:\n        typeof window !== \"undefined\"\n          ? JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }')\n              .data\n          : null,\n    },\n  });\n  cache.writeQuery({\n    query: CUSTOMER,\n\n    data: {\n      customer: { phone: null, name: null, address: null },\n    },\n  });\n};\nconst modifyUser = ({ user }) => {\n  if (typeof window !== \"undefined\") {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n    cache.modify({\n      fields: {\n        user() {\n          return user;\n        },\n      },\n    });\n  }\n};\nconst modifyCart = ({ items }) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"cartItems\", JSON.stringify({ data: items }));\n    cache.modify({\n      fields: {\n        cartItems() {\n          return items;\n        },\n      },\n    });\n  }\n};\nconst modifyWishlist = ({ items }) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"wishlist\", JSON.stringify({ data: items }));\n    cache.modify({\n      fields: {\n        wishlist() {\n          return items;\n        },\n      },\n    });\n  }\n};\nconst modifyCompare = ({ items }) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"compare\", JSON.stringify({ data: items }));\n    cache.modify({\n      fields: {\n        compare() {\n          return items;\n        },\n      },\n    });\n  }\n};\n\nconst modifyCustomer = ({ customer }) => {\n  if (typeof window !== \"undefined\") {\n    if (customer) {\n      localStorage.setItem(\"customer\", JSON.stringify(customer));\n    } else {\n      localStorage.removeItem(\"customer\");\n    }\n    cache.modify({\n      fields: {\n        customer() {\n          return customer;\n        },\n      },\n    });\n  }\n};\n\n/* \n    you can use client variable below\n*/\nexport const emptyCompare = () => {\n  modifyCompare({ items: [] });\n};\nexport const removeCompareItem = function (removeItem) {\n  let products = [];\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let items = [];\n  products.map((product) => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyCompare({ items });\n};\nexport function addProductToLocalCompare(newProduct) {\n  // get\n\n  let products = [];\n  try {\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let others = [];\n  products.map((product) => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct];\n\n  // save\n  modifyCompare({ items });\n}\n\nexport const onSignIn = ({ user }) => {\n  modifyUser({ user });\n};\nexport const onSignOut = () => {\n  modifyUser({ user: null });\n};\n\nexport const chooseCustomer = ({ customer }) => {\n  modifyCustomer({ customer });\n};\n\nexport const emptyCart = function () {\n  modifyCart({ items: [] });\n};\nexport const removeCartItem = (removeItem) => {\n  // get\n  const cartItems = JSON.parse(\n    localStorage.getItem(\"cartItems\") || '{ \"data\": [] }'\n  ).data;\n  // change\n  let items = [];\n  cartItems.map((item) => {\n    if (item.product.id !== removeItem.product.id) items.push(item);\n  });\n  modifyCart({ items });\n};\nexport const changeCartItem = function (cartItem, change) {\n  // get\n  let cartItems = [];\n  try {\n    cartItems = JSON.parse(\n      localStorage.getItem(\"cartItems\") || '{ \"data\": [] }'\n    ).data;\n  } catch {}\n\n  // change\n  let items = [];\n  const price = cartItem.product.price - cartItem.product.sale;\n\n  cartItems.map((item, index) => {\n    const quantity =\n      item.quantity + change > 0 ? item.quantity + change : item.quantity;\n    if (item.product.id !== cartItem.product.id) {\n      items.push(item);\n    } else {\n      items.push({\n        product: item.product,\n        quantity,\n        price: price * quantity,\n      });\n    }\n  });\n  // save\n  modifyCart({ items });\n};\n\nexport function addProductToLocalCart({ product, variables }) {\n  // get\n\n  let cartItems = [];\n  try {\n    cartItems = JSON.parse(\n      localStorage.getItem(\"cartItems\") || '{ \"data\": [] }'\n    ).data;\n  } catch {}\n\n  // change\n  let items = [];\n  let exist = false;\n  const price = product.price - product.sale;\n\n  cartItems.map((cartItem) => {\n    if (cartItem.product.id !== product.id) {\n      items.push(cartItem);\n    } else {\n      exist = true;\n      items.push({\n        product: cartItem.product,\n        quantity: cartItem.quantity + 1,\n        price: price * (cartItem.quantity + 1),\n      });\n    }\n  });\n  if (exist === false) items.push({ product, quantity: 1, price });\n  // save\n  modifyCart({ items });\n}\nexport const emptyWishlist = function () {\n  modifyWishlist({ items: [] });\n};\nexport const removeWishListItem = function (removeItem) {\n  let products = [];\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let items = [];\n  products.map((product) => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyWishlist({ items });\n};\n\nexport function addProductToLocalWishlist(newProduct) {\n  // get\n\n  let products = [];\n  try {\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let others = [];\n  products.map((product) => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct];\n\n  // save\n  modifyWishlist({ items });\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/apps/loaloa/app/components/orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($limit: Int, $skip: Int) {\\n    allOrders(orderBy: \\\"time_DESC\\\", first: $limit, skip: $skip) {\\n      id\\n      customer {\\n        id\\n        name\\n        phone\\n        address\\n      }\\n      items {\\n        id\\n        product {\\n          id\\n          image {\\n            publicUrl\\n          }\\n          images {\\n            file {\\n              publicUrl\\n            }\\n          }\\n        }\\n        quantity\\n        attributes {\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Link from \"@material-ui/core/Link\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Customer from \"./customer\";\nvar query = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    button: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 350\n    }\n  };\n});\nexport default function orders(_ref) {\n  var newOrder = _ref.newOrder,\n      setNewOrder = _ref.setNewOrder;\n  var classes = useStyles();\n\n  var _useState = useState(true),\n      moreResult = _useState[0],\n      setMore = _useState[1];\n\n  var _useState2 = useState(),\n      newKQ = _useState2[0],\n      setNewKQ = _useState2[1];\n\n  var _useQuery = useQuery(query, {\n    variables: {\n      limit: 1,\n      skip: 0\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      refetch = _useQuery.refetch;\n\n  var allOrders = data === null || data === void 0 ? void 0 : data.allOrders;\n\n  if (newOrder && !newKQ) {\n    setNewKQ(newOrder);\n    setNewOrder(false);\n    refetch();\n  }\n\n  function loadingMore() {\n    var count = data === null || data === void 0 ? void 0 : data.allOrders.length;\n    fetchMore({\n      variables: {\n        limit: 12,\n        skip: count\n      },\n      updateQuery: function updateQuery(prev, _ref2) {\n        var fetchMoreResult = _ref2.fetchMoreResult;\n\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n\n        return _Object$assign({}, prev, {\n          allOrders: [].concat(_toConsumableArray(prev.allOrders), _toConsumableArray(fetchMoreResult.allOrders))\n        });\n      }\n    });\n  }\n\n  return !loading ? __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, (allOrders === null || allOrders === void 0 ? void 0 : allOrders.length) ? allOrders === null || allOrders === void 0 ? void 0 : allOrders.map(function (order) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Đơn: \", __jsx(Link, {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"#\", id), __jsx(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"T\\u1ED5ng: \", formatMoney(total, 0), \" \\u0111\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }) : __jsx(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Danh s\\xE1ch k\\u1EBFt qu\\u1EA3 tr\\u1ED7ng.\"), moreResult && (allOrders === null || allOrders === void 0 ? void 0 : allOrders.length) ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: loadingMore,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Xem th\\xEAm\") : null)) : __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"rect\",\n    height: \"60vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/orders.js"],"names":["Grid","Paper","makeStyles","Skeleton","Typography","Button","Box","Divider","useState","useEffect","gql","useQuery","Link","formatMoney","Customer","query","useStyles","theme","root","padding","spacing","marginBottom","button","marginTop","marginRight","marginLeft","maxWidth","orders","newOrder","setNewOrder","classes","moreResult","setMore","newKQ","setNewKQ","variables","limit","skip","data","loading","error","fetchMore","refetch","allOrders","loadingMore","count","length","updateQuery","prev","fetchMoreResult","map","order","id","total"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Link from \"@material-ui/core/Link\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Customer from \"./customer\";\nconst query = gql`\n  query($limit: Int, $skip: Int) {\n    allOrders(orderBy: \"time_DESC\", first: $limit, skip: $skip) {\n      id\n      customer {\n        id\n        name\n        phone\n        address\n      }\n      items {\n        id\n        product {\n          id\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n        }\n        quantity\n        attributes {\n          name\n        }\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 350,\n  },\n}));\nexport default function orders({ newOrder, setNewOrder }) {\n  const classes = useStyles();\n  const [moreResult, setMore] = useState(true);\n  const [newKQ, setNewKQ] = useState();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 1, skip: 0 },\n  });\n  let allOrders = data?.allOrders;\n\n  if (newOrder && !newKQ) {\n    setNewKQ(newOrder);\n    setNewOrder(false);\n    refetch();\n  }\n\n  function loadingMore() {\n    let count = data?.allOrders.length;\n    fetchMore({\n      variables: {\n        limit: 12,\n        skip: count,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n        return Object.assign({}, prev, {\n          allOrders: [...prev.allOrders, ...fetchMoreResult.allOrders],\n        });\n      },\n    });\n  }\n  return !loading ? (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        {allOrders?.length ? (\n          allOrders?.map((order) => (\n            <Grid item xs={12} key={order.id}>\n              <Grid container spacing={1}>\n                <Grid item xs={4}>\n                  {\"Đơn: \"}\n                  <Link href=\"\">#{id}</Link>\n                  {/* <Customer order={order?.customer}></Customer> */}\n                  <Typography variant=\"body2\">\n                    Tổng: {formatMoney(total, 0)} đ\n                  </Typography>\n                </Grid>\n                <Grid item xs={8}></Grid>\n              </Grid>\n            </Grid>\n          ))\n        ) : (\n          <Typography variant=\"body1\">Danh sách kết quả trỗng.</Typography>\n        )}\n        {moreResult && allOrders?.length ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={loadingMore}\n            className={classes.button}\n          >\n            Xem thêm\n          </Button>\n        ) : null}\n      </Grid>\n    </Paper>\n  ) : (\n    <Skeleton animation=\"wave\" variant=\"rect\" height=\"60vh\" />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
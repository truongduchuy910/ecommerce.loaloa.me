{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Link from \"@material-ui/core/Link\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Customer from \"./customer\";\nimport OrderItem from \"./orderItem\";\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\nconst query = gql`\n  query($limit: Int, $skip: Int) {\n    allOrders(orderBy: \"time_DESC\", first: $limit, skip: $skip) {\n      id\n      customer {\n        id\n        name\n        phone\n        address\n      }\n      items {\n        id\n        price\n        product {\n          id\n          name\n          price\n          sale\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n        }\n        quantity\n        attributes {\n          name\n        }\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 350\n  }\n}));\nexport default function orders({\n  newOrder,\n  setNewOrder\n}) {\n  const classes = useStyles();\n  const {\n    0: moreResult,\n    1: setMore\n  } = useState(true);\n  const {\n    0: newKQ,\n    1: setNewKQ\n  } = useState();\n  let {\n    data,\n    loading,\n    error,\n    fetchMore,\n    refetch\n  } = useQuery(query, {\n    variables: {\n      limit: 1,\n      skip: 0\n    }\n  });\n  let allOrders = data === null || data === void 0 ? void 0 : data.allOrders;\n\n  if (newOrder && !newKQ) {\n    setNewKQ(newOrder);\n    setNewOrder(false);\n    refetch();\n  }\n\n  function loadingMore() {\n    let count = data === null || data === void 0 ? void 0 : data.allOrders.length;\n    fetchMore({\n      variables: {\n        limit: 12,\n        skip: count\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n\n        return Object.assign({}, prev, {\n          allOrders: [...prev.allOrders, ...fetchMoreResult.allOrders]\n        });\n      }\n    });\n  } // step\n\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = [\"Select master blaster campaign settings\", \"Create an ad group\", \"Create an ad\"];\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return !loading ? __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, (allOrders === null || allOrders === void 0 ? void 0 : allOrders.length) ? allOrders === null || allOrders === void 0 ? void 0 : allOrders.map(order => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: order.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, steps.map(label => __jsx(Step, {\n    key: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, label)))), \"Đơn: \", __jsx(Link, {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"#\", order === null || order === void 0 ? void 0 : order.id), __jsx(Customer, {\n    customer: order === null || order === void 0 ? void 0 : order.customer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"T\\u1ED5ng: \", formatMoney(order === null || order === void 0 ? void 0 : order.total, 0), \" \\u0111\"), __jsx(OrderItem, {\n    items: order === null || order === void 0 ? void 0 : order.items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })))) : __jsx(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Danh s\\xE1ch k\\u1EBFt qu\\u1EA3 tr\\u1ED7ng.\"), moreResult && (allOrders === null || allOrders === void 0 ? void 0 : allOrders.length) ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: loadingMore,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Xem th\\xEAm\") : null) : __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"rect\",\n    height: \"60vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/orders.js"],"names":["Grid","Paper","makeStyles","Skeleton","Typography","Button","Box","Divider","useState","useEffect","gql","useQuery","Link","formatMoney","Customer","OrderItem","Stepper","Step","StepLabel","query","useStyles","theme","root","padding","spacing","marginBottom","button","marginTop","marginRight","marginLeft","maxWidth","orders","newOrder","setNewOrder","classes","moreResult","setMore","newKQ","setNewKQ","data","loading","error","fetchMore","refetch","variables","limit","skip","allOrders","loadingMore","count","length","updateQuery","prev","fetchMoreResult","Object","assign","activeStep","setActiveStep","React","steps","handleNext","prevActiveStep","handleBack","handleReset","map","order","id","label","customer","total","items"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Link from \"@material-ui/core/Link\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Customer from \"./customer\";\nimport OrderItem from \"./orderItem\";\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\nconst query = gql`\n  query($limit: Int, $skip: Int) {\n    allOrders(orderBy: \"time_DESC\", first: $limit, skip: $skip) {\n      id\n      customer {\n        id\n        name\n        phone\n        address\n      }\n      items {\n        id\n        price\n        product {\n          id\n          name\n          price\n          sale\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n        }\n        quantity\n        attributes {\n          name\n        }\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 350,\n  },\n}));\nexport default function orders({ newOrder, setNewOrder }) {\n  const classes = useStyles();\n  const [moreResult, setMore] = useState(true);\n  const [newKQ, setNewKQ] = useState();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 1, skip: 0 },\n  });\n  let allOrders = data?.allOrders;\n\n  if (newOrder && !newKQ) {\n    setNewKQ(newOrder);\n    setNewOrder(false);\n    refetch();\n  }\n\n  function loadingMore() {\n    let count = data?.allOrders.length;\n    fetchMore({\n      variables: {\n        limit: 12,\n        skip: count,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n        return Object.assign({}, prev, {\n          allOrders: [...prev.allOrders, ...fetchMoreResult.allOrders],\n        });\n      },\n    });\n  }\n\n  // step\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = [\n    \"Select master blaster campaign settings\",\n    \"Create an ad group\",\n    \"Create an ad\",\n  ];\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return !loading ? (\n    <Grid container spacing={1}>\n      {allOrders?.length ? (\n        allOrders?.map((order) => (\n          <Grid item xs={12} key={order.id}>\n            <Paper className={classes.root}>\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              {\"Đơn: \"}\n              <Link href=\"\">#{order?.id}</Link>\n              <Customer customer={order?.customer} />\n              <Typography variant=\"body2\">\n                Tổng: {formatMoney(order?.total, 0)} đ\n              </Typography>\n              <OrderItem items={order?.items} />\n            </Paper>\n          </Grid>\n        ))\n      ) : (\n        <Typography variant=\"body1\">Danh sách kết quả trỗng.</Typography>\n      )}\n      {moreResult && allOrders?.length ? (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={loadingMore}\n          className={classes.button}\n        >\n          Xem thêm\n        </Button>\n      ) : null}\n    </Grid>\n  ) : (\n    <Skeleton animation=\"wave\" variant=\"rect\" height=\"60vh\" />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
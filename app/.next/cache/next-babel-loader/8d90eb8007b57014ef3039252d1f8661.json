{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/CreateOrder.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { TextField, InputAdornment, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Link, Fab, Drawer } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Customer from \"./Customer\";\nimport Customers from \"./Customers\";\nimport OrderItem from \"./orderItem\";\nimport Products from \"./Products\";\nimport formatMoney from \"../lib/formatMoney\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    height: \"70vh\"\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return __jsx(NumberFormat, _extends({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    isNumericString: true,\n    prefix: \"$\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default function createKetQuas({\n  onCreate\n}) {\n  const {\n    0: customer,\n    1: setCustomer\n  } = useState(false);\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  const {\n    0: sale,\n    1: setSale\n  } = useState(0);\n  const {\n    0: drawerStatus,\n    1: setDrawerStatus\n  } = useState(false);\n  const {\n    0: order,\n    1: setOrder\n  } = useState();\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n  const {\n    0: items,\n    1: setItems\n  } = useState([]); //\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // alert\n\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  useEffect(() => {});\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {};\n\n    try {\n      const {\n        data\n      } = await createKetQua({\n        variables\n      });\n      onCreate(data === null || data === void 0 ? void 0 : data.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n\n  function alertClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlertOpen(false);\n  }\n\n  const classes = useStyles();\n\n  function handleCreate() {\n    setDrawerStatus(true);\n  }\n\n  function toggleDrawer(event) {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setDrawerStatus(!drawerStatus);\n  }\n\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Customers, {\n    onClick: ({\n      customer\n    }) => {\n      console.log(customer);\n      setCustomer(customer);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"\\u0110i\\u1EC7n tho\\u1EA1i\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"\\u0110\\u1ECBa ch\\u1EC9\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, customer ? [customer].map(product => {\n    var _product$id;\n\n    return __jsx(TableRow, {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, (_product$id = product.id) === null || _product$id === void 0 ? void 0 : _product$id.toString().slice(0, 4), \"...\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, product.name), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, product.phone), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, product.address));\n  }) : null)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(Products, {\n    onClick: ({\n      product\n    }) => {\n      setProducts(products.concat([product]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"SL\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Ni\\xEAm y\\u1EBFt\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Gi\\u1EA3m (-)\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, (products === null || products === void 0 ? void 0 : products.length) ? products.map(product => __jsx(TableRow, {\n    key: product.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: \"100%\",\n      maxHeight: 40\n    },\n    src: product.image ? product.image.publicUrl : product.images[0].file.publicUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, product.name), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, product.quantity), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, formatMoney(product.price, 0)), __jsx(TableCell, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, __jsx(TextField, {\n    align: \"right\",\n    defaultValue: sale ? sale : product.sale,\n    onChange: event => {\n      setSale(event.target.value);\n    },\n    InputProps: {\n      inputComponent: \"OK\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, formatMoney(product.price - sale, 0)))) : null))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/CreateOrder.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Snackbar","CircularProgress","useState","useEffect","useRouter","gql","useMutation","layCung","getErrorMessage","TextField","InputAdornment","Typography","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Link","Fab","Drawer","AddIcon","EditIcon","SearchIcon","Customer","Customers","OrderItem","Products","formatMoney","createKetQuaMutation","useStyles","theme","root","padding","spacing","marginBottom","height","icon","marginRight","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","PropTypes","func","isRequired","string","createKetQuas","onCreate","customer","setCustomer","products","setProducts","sale","setSale","drawerStatus","setDrawerStatus","order","setOrder","createKetQua","router","items","setItems","loading","setLoading","alertOpen","setAlertOpen","React","alertMessage","setAlertMessage","handleSubmit","variables","data","error","push","alertClose","event","reason","classes","handleCreate","toggleDrawer","type","key","console","log","map","product","id","toString","slice","phone","address","concat","length","maxWidth","maxHeight","image","publicUrl","images","file","quantity","price","inputComponent"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport {\n  TextField,\n  InputAdornment,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Link,\n  Fab,\n  Drawer,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Customer from \"./Customer\";\nimport Customers from \"./Customers\";\nimport OrderItem from \"./orderItem\";\nimport Products from \"./Products\";\n\nimport formatMoney from \"../lib/formatMoney\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    height: \"70vh\",\n  },\n  icon: { marginRight: theme.spacing(1) },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default function createKetQuas({ onCreate }) {\n  const [customer, setCustomer] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [sale, setSale] = useState(0);\n\n  const [drawerStatus, setDrawerStatus] = useState(false);\n  const [order, setOrder] = useState();\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n  const [items, setItems] = useState([]);\n  //\n  const [loading, setLoading] = useState(false);\n  // alert\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n\n  useEffect(() => {});\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {};\n    try {\n      const { data } = await createKetQua({\n        variables,\n      });\n      onCreate(data?.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n  function alertClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  }\n  const classes = useStyles();\n  function handleCreate() {\n    setDrawerStatus(true);\n  }\n  function toggleDrawer(event) {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setDrawerStatus(!drawerStatus);\n  }\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Customers\n                      onClick={({ customer }) => {\n                        console.log(customer);\n                        setCustomer(customer);\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell>Tên</TableCell>\n\n                  <TableCell>Điện thoại</TableCell>\n                  <TableCell>Địa chỉ</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {customer\n                  ? [customer].map((product) => (\n                      <TableRow key={product.id}>\n                        <TableCell>\n                          {product.id?.toString().slice(0, 4)}...\n                        </TableCell>\n                        <TableCell>{product.name}</TableCell>\n                        <TableCell>{product.phone}</TableCell>\n                        <TableCell>{product.address}</TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Products\n                      onClick={({ product }) => {\n                        setProducts(products.concat([product]));\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell>Tên</TableCell>\n                  <TableCell align=\"right\">SL</TableCell>\n                  <TableCell align=\"right\">Niêm yết</TableCell>\n                  <TableCell align=\"right\">Giảm (-)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {products?.length\n                  ? products.map((product) => (\n                      <TableRow key={product.id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <img\n                            style={{ maxWidth: \"100%\", maxHeight: 40 }}\n                            src={\n                              product.image\n                                ? product.image.publicUrl\n                                : product.images[0].file.publicUrl\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>{product.name}</TableCell>\n                        <TableCell align=\"right\">{product.quantity}</TableCell>\n                        <TableCell align=\"right\">\n                          {formatMoney(product.price, 0)}\n                        </TableCell>\n                        <TableCell color=\"textSecondary\">\n                          <TextField\n                            align=\"right\"\n                            defaultValue={sale ? sale : product.sale}\n                            onChange={(event) => {\n                              setSale(event.target.value);\n                            }}\n                            InputProps={{\n                              inputComponent: \"OK\",\n                            }}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {formatMoney(product.price - sale, 0)}\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
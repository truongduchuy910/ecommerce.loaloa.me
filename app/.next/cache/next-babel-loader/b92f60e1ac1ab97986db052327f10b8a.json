{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/ketQuas.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport LoiGiais from \"./loiGiais\";\nconst query = gql`\n  query($limit: Int, $skip: Int) {\n    allKetQuas(orderBy: \"time_DESC\", first: $limit, skip: $skip) {\n      id\n      cung {\n        id\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 350\n  }\n}));\nexport default function ketQuas({\n  newKetQua\n}) {\n  const classes = useStyles();\n  const {\n    0: newKQ,\n    1: setNewKQ\n  } = useState();\n  const {\n    0: moreResult,\n    1: setMore\n  } = useState(true);\n  useEffect(() => {\n    setNewKQ(newKetQua);\n  });\n  let {\n    data,\n    loading,\n    error,\n    fetchMore\n  } = useQuery(query, {\n    variables: {\n      limit: 1,\n      skip: 0\n    }\n  });\n  let allKetQuas = data === null || data === void 0 ? void 0 : data.allKetQuas;\n\n  if (newKetQua) {\n    let skip = data === null || data === void 0 ? void 0 : data.allKetQuas.length;\n    fetchMore({\n      variables: {\n        skip\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n\n        return Object.assign({}, prev, {\n          allKetQuas: [...prev.allKetQuas, ...fetchMoreResult.allKetQuas]\n        });\n      }\n    });\n  }\n\n  function loadingMore() {\n    let skip = (data === null || data === void 0 ? void 0 : data.allKetQuas.length) + 1;\n    fetchMore({\n      variables: {\n        skip\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n\n        return Object.assign({}, prev, {\n          allKetQuas: [...prev.allKetQuas, ...fetchMoreResult.allKetQuas]\n        });\n      }\n    });\n  }\n\n  return allKetQuas && !loading ? __jsx(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, allKetQuas.length ? allKetQuas.map(ketQua => __jsx(LoiGiais, {\n    ketQua: ketQua,\n    newKetQua: newKQ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })) : __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Danh s\\xE1ch k\\u1EBFt qu\\u1EA3 tr\\u1ED7ng.\"), moreResult ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: loadingMore,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Xem th\\xEAm\") : null)) : __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"rect\",\n    height: \"60vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/ketQuas.js"],"names":["Grid","Paper","makeStyles","Skeleton","Typography","Button","useState","useEffect","gql","useQuery","LoiGiais","query","useStyles","theme","root","padding","spacing","marginBottom","button","marginTop","marginRight","marginLeft","maxWidth","ketQuas","newKetQua","classes","newKQ","setNewKQ","moreResult","setMore","data","loading","error","fetchMore","variables","limit","skip","allKetQuas","length","updateQuery","prev","fetchMoreResult","Object","assign","loadingMore","map","ketQua"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { useState, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport LoiGiais from \"./loiGiais\";\nconst query = gql`\n  query($limit: Int, $skip: Int) {\n    allKetQuas(orderBy: \"time_DESC\", first: $limit, skip: $skip) {\n      id\n      cung {\n        id\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 350,\n  },\n}));\nexport default function ketQuas({ newKetQua }) {\n  const classes = useStyles();\n  const [newKQ, setNewKQ] = useState();\n  const [moreResult, setMore] = useState(true);\n  useEffect(() => {\n    setNewKQ(newKetQua);\n  });\n  let { data, loading, error, fetchMore } = useQuery(query, {\n    variables: { limit: 1, skip: 0 },\n  });\n  let allKetQuas = data?.allKetQuas;\n  if (newKetQua) {\n    let skip = data?.allKetQuas.length;\n\n    fetchMore({\n      variables: {\n        skip,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n        return Object.assign({}, prev, {\n          allKetQuas: [...prev.allKetQuas, ...fetchMoreResult.allKetQuas],\n        });\n      },\n    });\n  }\n  function loadingMore() {\n    let skip = data?.allKetQuas.length + 1;\n    fetchMore({\n      variables: {\n        skip,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          setMore(false);\n          return prev;\n        }\n        return Object.assign({}, prev, {\n          allKetQuas: [...prev.allKetQuas, ...fetchMoreResult.allKetQuas],\n        });\n      },\n    });\n  }\n  return allKetQuas && !loading ? (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        {allKetQuas.length ? (\n          allKetQuas.map((ketQua) => (\n            <LoiGiais ketQua={ketQua} newKetQua={newKQ} />\n          ))\n        ) : (\n          <Typography variant=\"body1\" gutterBottom>\n            Danh sách kết quả trỗng.\n          </Typography>\n        )}\n        {moreResult ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={loadingMore}\n            className={classes.button}\n          >\n            Xem thêm\n          </Button>\n        ) : null}\n      </Grid>\n    </Paper>\n  ) : (\n    <Skeleton animation=\"wave\" variant=\"rect\" height=\"60vh\" />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
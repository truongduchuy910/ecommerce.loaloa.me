{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/cungVi.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layCungVi } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allCungVis {\n      id\n      name\n    }\n  }\n`;\nexport default function cungVi({\n  cung,\n  autocomplete,\n  onChange\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query);\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  const {\n    0: CV,\n    1: setCV\n  } = useState();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n\n    if ((data === null || data === void 0 ? void 0 : data.allCungVis) && cung && autocomplete) {\n      setCV(layCungVi({\n        cung,\n        allCungVis: data.allCungVis\n      }).CV);\n    }\n  }, [shouldRedirect]);\n  return (data === null || data === void 0 ? void 0 : data.allCungVis) && !loading ? __jsx(Autocomplete, {\n    value: CV || {},\n    onChange: (event, value) => {\n      setCV(value);\n      onChange(value);\n    },\n    size: \"small\",\n    options: data === null || data === void 0 ? void 0 : data.allCungVis,\n    getOptionLabel: option => {\n      return option.name;\n    },\n    filterSelectedOptions: true,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      variant: \"outlined\",\n      label: \"Cung V\\u1ECB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/cungVi.js"],"names":["TextField","Autocomplete","Skeleton","useState","useEffect","useRouter","gql","useQuery","layCungVi","query","cungVi","cung","autocomplete","onChange","data","loading","error","shouldRedirect","router","CV","setCV","push","allCungVis","event","value","option","name","params"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,MAAMC,KAAK,GAAGH,GAAI;;;;;;;CAAlB;AAQA,eAAe,SAASI,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAhB,EAAkD;AAC/D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACE,KAAD,CAAzC;AACA,QAAMQ,cAAc,GAAG,EAAEF,OAAO,IAAID,IAAb,CAAvB;AACA,QAAMI,MAAM,GAAGb,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACc,EAAD;AAAA,OAAKC;AAAL,MAAcjB,QAAQ,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,cAAJ,EAAoB;AAClBC,MAAAA,MAAM,CAACG,IAAP,CAAY,SAAZ;AACD;;AACD,QAAI,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,UAAN,KAAoBX,IAApB,IAA4BC,YAAhC,EAA8C;AAC5CQ,MAAAA,KAAK,CAACZ,SAAS,CAAC;AAAEG,QAAAA,IAAF;AAAQW,QAAAA,UAAU,EAAER,IAAI,CAACQ;AAAzB,OAAD,CAAT,CAAiDH,EAAlD,CAAL;AACD;AACF,GAPQ,EAON,CAACF,cAAD,CAPM,CAAT;AASA,SAAO,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,UAAN,KAAoB,CAACP,OAArB,GACL,MAAC,YAAD;AACE,IAAA,KAAK,EAAEI,EAAE,IAAI,EADf;AAEE,IAAA,QAAQ,EAAE,CAACI,KAAD,EAAQC,KAAR,KAAkB;AAC1BJ,MAAAA,KAAK,CAACI,KAAD,CAAL;AACAX,MAAAA,QAAQ,CAACW,KAAD,CAAR;AACD,KALH;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,OAAO,EAAEV,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,UAPjB;AAQE,IAAA,cAAc,EAAGG,MAAD,IAAY;AAC1B,aAAOA,MAAM,CAACC,IAAd;AACD,KAVH;AAWE,IAAA,qBAAqB,MAXvB;AAYE,IAAA,WAAW,EAAGC,MAAD,IACX,MAAC,SAAD,eAAeA,MAAf;AAAuB,MAAA,OAAO,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAkBL,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,MAAlB;AAAyB,IAAA,MAAM,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF;AAoBD","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layCungVi } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allCungVis {\n      id\n      name\n    }\n  }\n`;\nexport default function cungVi({ cung, autocomplete, onChange }) {\n  const { data, loading, error } = useQuery(query);\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n\n  const [CV, setCV] = useState();\n\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n    if (data?.allCungVis && cung && autocomplete) {\n      setCV(layCungVi({ cung, allCungVis: data.allCungVis }).CV);\n    }\n  }, [shouldRedirect]);\n\n  return data?.allCungVis && !loading ? (\n    <Autocomplete\n      value={CV || {}}\n      onChange={(event, value) => {\n        setCV(value);\n        onChange(value);\n      }}\n      size=\"small\"\n      options={data?.allCungVis}\n      getOptionLabel={(option) => {\n        return option.name;\n      }}\n      filterSelectedOptions\n      renderInput={(params) => (\n        <TextField {...params} variant=\"outlined\" label=\"Cung Vá»‹\" />\n      )}\n    />\n  ) : (\n    <Skeleton variant=\"rect\" height={40} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
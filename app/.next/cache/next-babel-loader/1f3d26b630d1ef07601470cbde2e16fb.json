{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/products.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport default function ProductItem() {\n  const classes = useStyles();\n  let {\n    data,\n    loading,\n    error,\n    fetchMore,\n    refetch\n  } = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  });\n  let allProducts = data === null || data === void 0 ? void 0 : data.allProducts;\n  console.log(allProducts);\n  return __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xECm ki\\u1EBFm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Hi\\u1EC7n t\\u1EA1i\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Sale\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, (allProducts === null || allProducts === void 0 ? void 0 : allProducts.length) ? allProducts.map(product => __jsx(TableRow, {\n    key: product.id,\n    hover: true,\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: \"100%\",\n      maxHeight: 80\n    },\n    src: product.image ? product.image.publicUrl : product.images[0].file.publicUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, product.name), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, formatMoney(product.price, 0)), __jsx(TableCell, {\n    align: \"right\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, formatMoney(product.sale, 0))))) : null)));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/products.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","SearchIcon","formatMoney","gql","useQuery","query","useStyles","theme","root","padding","spacing","marginBottom","ProductItem","classes","data","loading","error","fetchMore","refetch","variables","limit","allProducts","console","log","length","map","product","id","maxWidth","maxHeight","image","publicUrl","images","file","name","price","sale"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function ProductItem() {\n  const classes = useStyles();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allProducts = data?.allProducts;\n  console.log(allProducts);\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Tìm kiếm\"\n              />\n            </TableCell>\n            <TableCell>Tên</TableCell>\n            <TableCell align=\"right\">Hiện tại</TableCell>\n            <TableCell align=\"right\">Sale</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allProducts?.length\n            ? allProducts.map((product) => (\n                <TableRow key={product.id} hover onClick={() => {}}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <img\n                      style={{ maxWidth: \"100%\", maxHeight: 80 }}\n                      src={\n                        product.image\n                          ? product.image.publicUrl\n                          : product.images[0].file.publicUrl\n                      }\n                    />\n                  </TableCell>\n                  <TableCell>{product.name}</TableCell>\n                  <TableCell align=\"right\">\n                    {formatMoney(product.price, 0)}\n                  </TableCell>\n                  <TableCell align=\"right\" color=\"textSecondary\">\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {formatMoney(product.sale, 0)}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))\n            : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/createKetQua.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(1),\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\n\nvar createKetQuas = function createKetQuas(_ref) {\n  _s();\n\n  var laSoTuVi = _ref.laSoTuVi,\n      data = _ref.data,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState(false),\n      autocomplete = _useState[0],\n      setAuto = _useState[1]; //\n\n\n  var _useState2 = useState({}),\n      cung = _useState2[0],\n      setCung = _useState2[1];\n\n  var _useState3 = useState({}),\n      cungVi = _useState3[0],\n      setCungVi = _useState3[1];\n\n  var _useState4 = useState([]),\n      chinhTinhs = _useState4[0],\n      setChinhTinhs = _useState4[1];\n\n  var _useState5 = useState([]),\n      phuTinhs = _useState5[0],\n      setPhuTinhs = _useState5[1];\n\n  var variables = {\n    cung: cung === null || cung === void 0 ? void 0 : cung.id,\n    cungVi: cungVi === null || cungVi === void 0 ? void 0 : cungVi.id,\n    chinhTinhs: onlyId(chinhTinhs),\n    phuTinhs: onlyId(phuTinhs)\n  }; // auto fill\n\n  var _useState6 = useState(false),\n      autoFill = _useState6[0],\n      setAutoFill = _useState6[1]; // autocomplete = true\n\n\n  var _useState7 = useState(),\n      DX = _useState7[0],\n      setDX = _useState7[1];\n\n  var _useState8 = useState(),\n      T1 = _useState8[0],\n      setT1 = _useState8[1];\n\n  var _useState9 = useState(),\n      T2 = _useState9[0],\n      setT2 = _useState9[1];\n\n  var _useState10 = useState(),\n      XC = _useState10[0],\n      setXC = _useState10[1]; // // autocomplete = false\n\n\n  var _useState11 = useState(),\n      CV = _useState11[0],\n      setCV = _useState11[1];\n\n  var _useState12 = useState(),\n      CT = _useState12[0],\n      setCT = _useState12[1];\n\n  var _useState13 = useState(),\n      PT = _useState13[0],\n      setPT = _useState13[1];\n\n  var _useState14 = useState(),\n      PTT1 = _useState14[0],\n      setPTT1 = _useState14[1];\n\n  var _useState15 = useState(),\n      PTT2 = _useState15[0],\n      setPTT2 = _useState15[1];\n\n  var _useState16 = useState(),\n      PTXC = _useState16[0],\n      setPTXC = _useState16[1];\n\n  useEffect(function () {});\n\n  function handleCungChange(cung) {\n    setCung(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      var _layCung = layCung({\n        cung: cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      }),\n          _DX = _layCung.DX,\n          _T = _layCung.T1,\n          _T2 = _layCung.T2,\n          _XC = _layCung.XC;\n\n      setDX(_DX);\n      setT1(_T);\n      setT2(_T2);\n      setXC(_XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  var classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Cung, {\n    onChange: handleCungChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(CungVi, {\n    cung: DX,\n    setCung: setDX,\n    CV: CV,\n    setCV: setCV,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(AllChinhTinhs, {\n    cung: DX,\n    setCung: setDX,\n    CT: CT,\n    setCT: setCT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    setCung: setDX,\n    PT: PT,\n    setPT: setPT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false,\n    cung: T1,\n    setCung: setT1,\n    PT: PTT1,\n    setPT: setPTT1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false,\n    cung: T2,\n    setCung: setT2,\n    PT: PTT2,\n    setPT: setPTT2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false,\n    cung: XC,\n    setCung: setXC,\n    PT: PTXC,\n    setPT: setPTXC,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: function onClick() {\n      return onSubmit({\n        cung: cung === null || cung === void 0 ? void 0 : cung.is,\n        cungVi: cungVi === null || cungVi === void 0 ? void 0 : cungVi.id,\n        chinhTinhs: onlyId(chinhTinhs),\n        phuTinhs: onlyId(phuTinhs)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Xem K\\u1EBFt Qu\\u1EA3\"))));\n};\n\n_s(createKetQuas, \"eXoDZV+uU00RtZ2orvYZB7ekP9o=\", false, function () {\n  return [useStyles];\n});\n\nexport default createKetQuas;\n\nfunction onlyId(array) {\n  if (!array) return [];\n  var result = [];\n  array.map(function (item) {\n    return result.push(item.id);\n  });\n  return result;\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/createKetQua.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Cung","CungVi","AllChinhTinhs","AllPhuTinhs","useState","useEffect","layCung","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","data","onSubmit","autocomplete","setAuto","cung","setCung","cungVi","setCungVi","chinhTinhs","setChinhTinhs","phuTinhs","setPhuTinhs","variables","id","onlyId","autoFill","setAutoFill","DX","setDX","T1","setT1","T2","setT2","XC","setXC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","handleCungChange","thapNhiCung","handleChangeCheckBox","event","target","checked","classes","cungChu","is","array","result","map","item","push"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\nconst createKetQuas = ({ laSoTuVi, data, onSubmit }) => {\n  const [autocomplete, setAuto] = useState(false);\n\n  //\n  const [cung, setCung] = useState({});\n  const [cungVi, setCungVi] = useState({});\n  const [chinhTinhs, setChinhTinhs] = useState([]);\n  const [phuTinhs, setPhuTinhs] = useState([]);\n  let variables = {\n    cung: cung?.id,\n    cungVi: cungVi?.id,\n    chinhTinhs: onlyId(chinhTinhs),\n    phuTinhs: onlyId(phuTinhs),\n  };\n  // auto fill\n  const [autoFill, setAutoFill] = useState(false);\n  // autocomplete = true\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState();\n  const [PT, setPT] = useState();\n  const [PTT1, setPTT1] = useState();\n  const [PTT2, setPTT2] = useState();\n  const [PTXC, setPTXC] = useState();\n\n  useEffect(() => {});\n  function handleCungChange(cung) {\n    setCung(cung);\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Cung onChange={handleCungChange} />\n        </Grid>\n        <Grid item xs={12}>\n          <CungVi cung={DX} setCung={setDX} CV={CV} setCV={setCV} />\n        </Grid>\n        <Grid item xs={12}>\n          <AllChinhTinhs cung={DX} setCung={setDX} CT={CT} setCT={setCT} />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs cung={DX} setCung={setDX} PT={PT} setPT={setPT} />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T1 ? \"Tam hợp \" + T1.cungChu : false}\n            cung={T1}\n            setCung={setT1}\n            PT={PTT1}\n            setPT={setPTT1}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T2 ? \"Tam hợp \" + T2.cungChu : false}\n            cung={T2}\n            setCung={setT2}\n            PT={PTT2}\n            setPT={setPTT2}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={XC ? \"Xung chiếu \" + XC.cungChu : false}\n            cung={XC}\n            setCung={setXC}\n            PT={PTXC}\n            setPT={setPTXC}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={autocomplete}\n                onChange={handleChangeCheckBox}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Tự động điền từ lá sô?\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={() =>\n              onSubmit({\n                cung: cung?.is,\n                cungVi: cungVi?.id,\n                chinhTinhs: onlyId(chinhTinhs),\n                phuTinhs: onlyId(phuTinhs),\n              })\n            }\n          >\n            Xem Kết Quả\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\nexport default createKetQuas;\nfunction onlyId(array) {\n  if (!array) return [];\n  let result = [];\n  array.map((item) => result.push(item.id));\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}
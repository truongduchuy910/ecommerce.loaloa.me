{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/createKetQua.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst createKetQuas = ({\n  laSoTuVi,\n  data,\n  onSubmit\n}) => {\n  const {\n    0: autocomplete,\n    1: setAuto\n  } = useState(false); //\n\n  const {\n    0: cung,\n    1: setCung\n  } = useState({});\n  const {\n    0: cungVi,\n    1: setCungVi\n  } = useState({});\n  const {\n    0: chinhTinhs,\n    1: setChinhTinhs\n  } = useState([]);\n  const {\n    0: phuTinhs,\n    1: setPhuTinhs\n  } = useState([]);\n  let variables = {\n    cung: cung === null || cung === void 0 ? void 0 : cung.id,\n    cungVi: cungVi === null || cungVi === void 0 ? void 0 : cungVi.id,\n    chinhTinhs: onlyId(chinhTinhs),\n    phuTinhs: onlyId(phuTinhs)\n  }; // auto fill\n\n  const {\n    0: autoFill,\n    1: setAutoFill\n  } = useState(false); // autocomplete = true\n\n  const {\n    0: DX,\n    1: setDX\n  } = useState();\n  const {\n    0: T1,\n    1: setT1\n  } = useState();\n  const {\n    0: T2,\n    1: setT2\n  } = useState();\n  const {\n    0: XC,\n    1: setXC\n  } = useState(); // // autocomplete = false\n\n  const {\n    0: CV,\n    1: setCV\n  } = useState();\n  const {\n    0: CT,\n    1: setCT\n  } = useState();\n  const {\n    0: PT,\n    1: setPT\n  } = useState();\n  const {\n    0: PTT1,\n    1: setPTT1\n  } = useState();\n  const {\n    0: PTT2,\n    1: setPTT2\n  } = useState();\n  const {\n    0: PTXC,\n    1: setPTXC\n  } = useState();\n  useEffect(() => {});\n\n  function handleCungChange(cung) {\n    setCung(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let {\n        DX,\n        T1,\n        T2,\n        XC\n      } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Cung, {\n    onChange: handleCungChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(CungVi, {\n    cung: DX,\n    autocomplete: autocomplete,\n    onChange: value => {\n      console.log(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(AllChinhTinhs, {\n    cung: DX,\n    autocomplete: autocomplete,\n    onChange: setChinhTinhs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    autocomplete: autocomplete,\n    onChange: PTs => {\n      setPhuTinhs(phuTinhs.concat(PTs));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: T1,\n    autocomplete: autocomplete,\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false,\n    onChange: PTs => {\n      setPhuTinhs(phuTinhs.concat(PTs));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: T2,\n    autocomplete: autocomplete,\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false,\n    onChange: PTs => {\n      setPhuTinhs(phuTinhs.concat(PTs));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: XC,\n    autocomplete: autocomplete,\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false,\n    onChange: PTs => {\n      setPhuTinhs(phuTinhs.concat(PTs));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => onSubmit({\n      cung: cung === null || cung === void 0 ? void 0 : cung.is,\n      cungVi: cungVi === null || cungVi === void 0 ? void 0 : cungVi.id,\n      chinhTinhs: onlyId(chinhTinhs),\n      phuTinhs: onlyId(phuTinhs)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Xem K\\u1EBFt Qu\\u1EA3\"))));\n};\n\nexport default createKetQuas;\n\nfunction onlyId(array) {\n  if (!array) return [];\n  let result = [];\n  array.map(item => result.push(item.id));\n  return result;\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/createKetQua.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Cung","CungVi","AllChinhTinhs","AllPhuTinhs","useState","useEffect","layCung","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","data","onSubmit","autocomplete","setAuto","cung","setCung","cungVi","setCungVi","chinhTinhs","setChinhTinhs","phuTinhs","setPhuTinhs","variables","id","onlyId","autoFill","setAutoFill","DX","setDX","T1","setT1","T2","setT2","XC","setXC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","handleCungChange","thapNhiCung","handleChangeCheckBox","event","target","checked","classes","value","console","log","PTs","concat","cungChu","is","array","result","map","item","push"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\nconst createKetQuas = ({ laSoTuVi, data, onSubmit }) => {\n  const [autocomplete, setAuto] = useState(false);\n\n  //\n  const [cung, setCung] = useState({});\n  const [cungVi, setCungVi] = useState({});\n  const [chinhTinhs, setChinhTinhs] = useState([]);\n  const [phuTinhs, setPhuTinhs] = useState([]);\n  let variables = {\n    cung: cung?.id,\n    cungVi: cungVi?.id,\n    chinhTinhs: onlyId(chinhTinhs),\n    phuTinhs: onlyId(phuTinhs),\n  };\n  // auto fill\n  const [autoFill, setAutoFill] = useState(false);\n  // autocomplete = true\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState();\n  const [PT, setPT] = useState();\n  const [PTT1, setPTT1] = useState();\n  const [PTT2, setPTT2] = useState();\n  const [PTXC, setPTXC] = useState();\n\n  useEffect(() => {});\n  function handleCungChange(cung) {\n    setCung(cung);\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Cung onChange={handleCungChange} />\n        </Grid>\n        <Grid item xs={12}>\n          <CungVi\n            cung={DX}\n            autocomplete={autocomplete}\n            onChange={(value) => {\n              console.log(value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllChinhTinhs\n            cung={DX}\n            autocomplete={autocomplete}\n            onChange={setChinhTinhs}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            cung={DX}\n            autocomplete={autocomplete}\n            onChange={(PTs) => {\n              setPhuTinhs(phuTinhs.concat(PTs));\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            cung={T1}\n            autocomplete={autocomplete}\n            label={T1 ? \"Tam hợp \" + T1.cungChu : false}\n            onChange={(PTs) => {\n              setPhuTinhs(phuTinhs.concat(PTs));\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            cung={T2}\n            autocomplete={autocomplete}\n            label={T2 ? \"Tam hợp \" + T2.cungChu : false}\n            onChange={(PTs) => {\n              setPhuTinhs(phuTinhs.concat(PTs));\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            cung={XC}\n            autocomplete={autocomplete}\n            label={XC ? \"Xung chiếu \" + XC.cungChu : false}\n            onChange={(PTs) => {\n              setPhuTinhs(phuTinhs.concat(PTs));\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={autocomplete}\n                onChange={handleChangeCheckBox}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Tự động điền từ lá sô?\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={() =>\n              onSubmit({\n                cung: cung?.is,\n                cungVi: cungVi?.id,\n                chinhTinhs: onlyId(chinhTinhs),\n                phuTinhs: onlyId(phuTinhs),\n              })\n            }\n          >\n            Xem Kết Quả\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\nexport default createKetQuas;\nfunction onlyId(array) {\n  if (!array) return [];\n  let result = [];\n  array.map((item) => result.push(item.id));\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}
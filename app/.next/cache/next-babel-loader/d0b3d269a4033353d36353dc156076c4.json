{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/getProduct.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment, Button, Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\"; //import Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Products from \"./products\";\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport default function ProductItem() {\n  const classes = useStyles();\n  let {\n    data,\n    loading,\n    error,\n    fetchMore,\n    refetch\n  } = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  });\n  let allProducts = data === null || data === void 0 ? void 0 : data.allProducts;\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"S\\u1EA3n ph\\u1EA9m:\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"T\\xECm ki\\u1EBFm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"T\\u1ED3n\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"B\\xECnh th\\u01B0\\u1EDDng\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Gi\\u1EA3m gi\\xE1\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, (allProducts === null || allProducts === void 0 ? void 0 : allProducts.length) ? allProducts.map(product => __jsx(TableRow, {\n    key: product.id,\n    hover: true,\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: \"100%\",\n      maxHeight: 80\n    },\n    src: product.image ? product.image.publicUrl : product.images[0].file.publicUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, product.name), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, product.quantity), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, formatMoney(product.price, 0)), __jsx(TableCell, {\n    align: \"right\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    align: \"right\",\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"Gi\\u1EA3m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Fab, {\n    size: \"small\",\n    \"aria-label\": \"add\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))))) : null))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/getProduct.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","Button","Fab","AddIcon","formatMoney","gql","useQuery","Products","query","useStyles","theme","root","padding","spacing","marginBottom","ProductItem","classes","data","loading","error","fetchMore","refetch","variables","limit","allProducts","length","map","product","id","maxWidth","maxHeight","image","publicUrl","images","file","name","quantity","price"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Button,\n  Fab,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n//import Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Products from \"./products\";\n\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function ProductItem() {\n  const classes = useStyles();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allProducts = data?.allProducts;\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            Sản phẩm:\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Tìm kiếm\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {/* <Autocomplete\n            id=\"combo-box-demo\"\n            options={[{ title: \"1\" }]}\n            getOptionLabel={(option) => option.title}\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\n            )}\n          /> */}\n        </Grid>\n\n        <Grid item xs={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Tên</TableCell>\n                  <TableCell>Tồn</TableCell>\n                  <TableCell>Bình thường</TableCell>\n                  <TableCell>Giảm giá</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {allProducts?.length\n                  ? allProducts.map((product) => (\n                      <TableRow key={product.id} hover onClick={() => {}}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <img\n                            style={{ maxWidth: \"100%\", maxHeight: 80 }}\n                            src={\n                              product.image\n                                ? product.image.publicUrl\n                                : product.images[0].file.publicUrl\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>{product.name}</TableCell>\n                        <TableCell>{product.quantity}</TableCell>\n                        <TableCell align=\"right\">\n                          {formatMoney(product.price, 0)}\n                        </TableCell>\n                        <TableCell align=\"right\" color=\"textSecondary\">\n                          <TextField\n                            fullWidth\n                            align=\"right\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            label=\"Giảm\"\n                          />\n                        </TableCell>\n\n                        <TableCell>\n                          <Fab size=\"small\" aria-label=\"add\" color=\"primary\">\n                            <AddIcon />\n                          </Fab>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/CreateOrder.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { TextField, InputAdornment, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Link, Fab, Drawer } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Customer from \"./Customer\";\nimport Customers from \"./Customers\";\nimport OrderItem from \"./orderItem\";\nimport Products from \"./Products\";\nimport formatMoney from \"../lib/formatMoney\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    height: \"70vh\"\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n}));\nexport default function createKetQuas({\n  onCreate\n}) {\n  const {\n    0: customer,\n    1: setCustomer\n  } = useState(false);\n  const {\n    0: drawerStatus,\n    1: setDrawerStatus\n  } = useState(false);\n  const {\n    0: order,\n    1: setOrder\n  } = useState();\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n  const {\n    0: items,\n    1: setItems\n  } = useState([]); //\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // alert\n\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  useEffect(() => {});\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {};\n\n    try {\n      const {\n        data\n      } = await createKetQua({\n        variables\n      });\n      onCreate(data === null || data === void 0 ? void 0 : data.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n\n  function alertClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlertOpen(false);\n  }\n\n  const classes = useStyles();\n\n  function handleCreate() {\n    setDrawerStatus(true);\n  }\n\n  function toggleDrawer(event) {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setDrawerStatus(!drawerStatus);\n  }\n\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Customers, {\n    onClick: ({\n      customer\n    }) => {\n      console.log(customer);\n      setCustomer(customer);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"\\u0110i\\u1EC7n tho\\u1EA1i\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"\\u0110\\u1ECBa ch\\u1EC9\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, customer ? [customer].map(item => {\n    var _item$id;\n\n    return __jsx(TableRow, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, (_item$id = item.id) === null || _item$id === void 0 ? void 0 : _item$id.toString().slice(0, 5), \"...\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, item.name), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, item.phone), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, item.address), __jsx(TableCell, {\n      align: \"right\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }));\n  }) : null)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(Products, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"SL\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Ni\\xEAm y\\u1EBFt\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Gi\\u1EA3m\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, (items === null || items === void 0 ? void 0 : items.length) ? items.map(item => __jsx(TableRow, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: \"100%\",\n      maxHeight: 40\n    },\n    src: item.product.image ? item.product.image.publicUrl : item.product.images[0].file.publicUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, item.product.name), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, item.quantity), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, formatMoney(item.price, 0)), __jsx(TableCell, {\n    align: \"right\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"- \", formatMoney(item.product.price, 0))))) : null))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/CreateOrder.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Snackbar","CircularProgress","useState","useEffect","useRouter","gql","useMutation","layCung","getErrorMessage","TextField","InputAdornment","Typography","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Link","Fab","Drawer","AddIcon","EditIcon","SearchIcon","Customer","Customers","OrderItem","Products","formatMoney","createKetQuaMutation","useStyles","theme","root","padding","spacing","marginBottom","height","icon","marginRight","createKetQuas","onCreate","customer","setCustomer","drawerStatus","setDrawerStatus","order","setOrder","createKetQua","router","items","setItems","loading","setLoading","alertOpen","setAlertOpen","React","alertMessage","setAlertMessage","handleSubmit","variables","data","error","push","alertClose","event","reason","classes","handleCreate","toggleDrawer","type","key","console","log","map","item","id","toString","slice","name","phone","address","length","maxWidth","maxHeight","product","image","publicUrl","images","file","quantity","price"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport {\n  TextField,\n  InputAdornment,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Link,\n  Fab,\n  Drawer,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Customer from \"./Customer\";\nimport Customers from \"./Customers\";\nimport OrderItem from \"./orderItem\";\nimport Products from \"./Products\";\n\nimport formatMoney from \"../lib/formatMoney\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    height: \"70vh\",\n  },\n  icon: { marginRight: theme.spacing(1) },\n}));\nexport default function createKetQuas({ onCreate }) {\n  const [customer, setCustomer] = useState(false);\n  const [drawerStatus, setDrawerStatus] = useState(false);\n  const [order, setOrder] = useState();\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n  const [items, setItems] = useState([]);\n  //\n  const [loading, setLoading] = useState(false);\n  // alert\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n\n  useEffect(() => {});\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {};\n    try {\n      const { data } = await createKetQua({\n        variables,\n      });\n      onCreate(data?.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n  function alertClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  }\n  const classes = useStyles();\n  function handleCreate() {\n    setDrawerStatus(true);\n  }\n  function toggleDrawer(event) {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setDrawerStatus(!drawerStatus);\n  }\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Customers\n                      onClick={({ customer }) => {\n                        console.log(customer);\n                        setCustomer(customer);\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell>Tên</TableCell>\n\n                  <TableCell align=\"right\">Điện thoại</TableCell>\n                  <TableCell align=\"right\">Địa chỉ</TableCell>\n                  <TableCell align=\"right\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {customer\n                  ? [customer].map((item) => (\n                      <TableRow key={item.id}>\n                        <TableCell>{item.id?.toString().slice(0, 5)}...</TableCell>\n                        <TableCell>{item.name}</TableCell>\n                        <TableCell>{item.phone}</TableCell>\n                        <TableCell>{item.address}</TableCell>\n                        <TableCell\n                          align=\"right\"\n                          color=\"textSecondary\"\n                        ></TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Products />\n                  </TableCell>\n                  <TableCell>Tên</TableCell>\n                  <TableCell align=\"right\">SL</TableCell>\n                  <TableCell align=\"right\">Niêm yết</TableCell>\n                  <TableCell align=\"right\">Giảm</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {items?.length\n                  ? items.map((item) => (\n                      <TableRow key={item.id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <img\n                            style={{ maxWidth: \"100%\", maxHeight: 40 }}\n                            src={\n                              item.product.image\n                                ? item.product.image.publicUrl\n                                : item.product.images[0].file.publicUrl\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>{item.product.name}</TableCell>\n                        <TableCell align=\"right\">{item.quantity}</TableCell>\n                        <TableCell align=\"right\">\n                          {formatMoney(item.price, 0)}\n                        </TableCell>\n                        <TableCell align=\"right\" color=\"textSecondary\">\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            - {formatMoney(item.product.price, 0)}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
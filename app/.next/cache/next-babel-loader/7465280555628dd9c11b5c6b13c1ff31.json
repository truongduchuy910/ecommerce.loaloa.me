{"ast":null,"code":"var _jsxFileName = \"/home/truongduchuy910/apps/tuvi/app/pages/login.js\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport request from \"../components/config/request\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments } from \"react-facebook\";\n\nfunction Login() {\n  const {\n    0: username,\n    1: setUserName\n  } = useState(false);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(false);\n  const {\n    0: buttonStatus,\n    1: setButtonStatus\n  } = useState(\"Đăng nhập\");\n\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n\n    if (username.length > 5 && password.length > 5) {\n      let response = await request({\n        body: {\n          query: `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n          variables: {\n            username,\n            password\n          }\n        }\n      });\n      let {\n        data: {\n          authenticateUserWithPassword\n        }\n      } = response;\n\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: {\n            id,\n            email,\n            isAdmin,\n            isSupporter,\n            isCustomer\n          }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đăng nhập thành công!\");\n        login({\n          token,\n          id,\n          email,\n          isAdmin,\n          isSupporter,\n          isCustomer\n        });\n      } else {\n        setButtonStatus(\"Tài khoản không tồn tại.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"sm\",\n    style: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(LightBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      marginBottom: 34\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u0110\\u0102NG K\\xDD T\\xC0I KHO\\u1EA2N \\u0110\\u1EC2 KH\\xC1M PH\\xC1 TH\\u1EBE GI\\u1EDAI HUY\\u1EC0N B\\xCD\")), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      backgroundColor: \"#76552a\",\n      color: \"#dab857\",\n      marginTop: 21,\n      marginBottom: 21\n    },\n    fullWidth: true // variant=\"outlined\"\n    ,\n    onClick: async () => await loginButtonClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, buttonStatus)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng k\\xFD\"))))))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/truongduchuy910/apps/tuvi/app/pages/login.js"],"names":["useState","Grid","TextField","Button","Container","Layout","LightBoard","request","login","Link","Logo","Typography","React","Component","FacebookProvider","Comments","Login","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","response","body","query","variables","data","authenticateUserWithPassword","token","item","id","email","isAdmin","isSupporter","isCustomer","padding","marginBottom","e","target","value","backgroundColor","color","marginTop"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../src/Layout\";\nimport LightBoard from \"../src/LightBoard\";\nimport request from \"../components/config/request\";\nimport { login } from \"../utils/auth\";\nimport Link from \"../src/Link\";\nimport Logo from \"../src/logo\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport React, { Component } from \"react\";\nimport { FacebookProvider, Comments } from \"react-facebook\";\n\nfunction Login() {\n  const [username, setUserName] = useState(false);\n  const [password, setPassword] = useState(false);\n  const [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request({\n        body: {\n          query: `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n          isAdmin\n          isSupporter\n          isCustomer\n      }\n      }}`,\n          variables: {\n            username,\n            password,\n          },\n        },\n      });\n\n      let {\n        data: { authenticateUserWithPassword },\n      } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email, isAdmin, isSupporter, isCustomer },\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đăng nhập thành công!\");\n        login({ token, id, email, isAdmin, isSupporter, isCustomer });\n      } else {\n        setButtonStatus(\"Tài khoản không tồn tại.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <Layout>\n      <Container maxWidth=\"sm\" style={{ padding: 8 }}>\n        <LightBoard>\n          <Grid container spacing={1} justify=\"center\">\n            <Grid item xs={12} md={10}>\n              <Logo />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body1\" style={{ marginBottom: 34 }}>\n                ĐĂNG KÝ TÀI KHOẢN ĐỂ KHÁM PHÁ THẾ GIỚI HUYỀN BÍ\n              </Typography>\n            </Grid>\n            <form noValidate autoComplete=\"on\">\n              <Grid container justify=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    id=\"username\"\n                    label=\"Tên đăng nhập\"\n                    onChange={(e) => {\n                      setUserName(e.target.value);\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    id=\"password\"\n                    label=\"Mật khẩu\"\n                    type=\"password\"\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Button\n                    style={{\n                      backgroundColor: \"#76552a\",\n                      color: \"#dab857\",\n                      marginTop: 21,\n                      marginBottom: 21,\n                    }}\n                    fullWidth\n                    // variant=\"outlined\"\n                    onClick={async () => await loginButtonClick()}\n                  >\n                    {buttonStatus}\n                  </Button>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Link href=\"/signup\">Đăng ký</Link>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </LightBoard>\n      </Container>\n    </Layout>\n  );\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
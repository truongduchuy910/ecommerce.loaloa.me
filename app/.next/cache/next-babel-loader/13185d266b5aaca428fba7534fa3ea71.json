{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/createOrder.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { TextField, InputAdornment, Typography } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport default function createKetQuas({\n  laSoTuVi,\n  onCreate\n}) {\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter(); //\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // alert\n\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\"); // autocomplete\n\n  const {\n    0: autocomplete,\n    1: setAuto\n  } = useState(true);\n  const {\n    0: autoEnable,\n    1: setAutoEnable\n  } = useState(false); // autocomplete = true data from \"laSoTuVi\"\n\n  const {\n    0: DX,\n    1: setDX\n  } = useState();\n  const {\n    0: T1,\n    1: setT1\n  } = useState();\n  const {\n    0: T2,\n    1: setT2\n  } = useState();\n  const {\n    0: XC,\n    1: setXC\n  } = useState(); // // autocomplete = false data from child state\n\n  const {\n    0: C,\n    1: setC\n  } = useState();\n  const {\n    0: CV,\n    1: setCV\n  } = useState();\n  const {\n    0: CT,\n    1: setCT\n  } = useState([]);\n  const {\n    0: PT,\n    1: setPT\n  } = useState([]);\n  const {\n    0: PTT1,\n    1: setPTT1\n  } = useState([]);\n  const {\n    0: PTT2,\n    1: setPTT2\n  } = useState([]);\n  const {\n    0: PTXC,\n    1: setPTXC\n  } = useState([]);\n  useEffect(() => {\n    setAutoEnable(Boolean(laSoTuVi));\n  });\n\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let {\n        DX,\n        T1,\n        T2,\n        XC\n      } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: {\n        id: C === null || C === void 0 ? void 0 : C.id\n      },\n      cungVi: {\n        id: CV === null || CV === void 0 ? void 0 : CV.id\n      },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(PT.concat(PTT1).concat(PTT2).concat(PTXC))\n    };\n\n    try {\n      const {\n        data\n      } = await createKetQua({\n        variables\n      });\n      onCreate(data === null || data === void 0 ? void 0 : data.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"Kh\\xE1ch h\\xE0ng\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"S\\u1EA3n ph\\u1EA9m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: alertOpen,\n    onClose: alertClose,\n    autoHideDuration: 3000,\n    message: alertMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/createOrder.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Snackbar","CircularProgress","useState","useEffect","useRouter","gql","useMutation","layCung","getErrorMessage","TextField","InputAdornment","Typography","SearchIcon","createKetQuaMutation","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","onCreate","createKetQua","router","loading","setLoading","alertOpen","setAlertOpen","React","alertMessage","setAlertMessage","autocomplete","setAuto","autoEnable","setAutoEnable","DX","setDX","T1","setT1","T2","setT2","XC","setXC","C","setC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","Boolean","handleCungChange","cung","thapNhiCung","handleChangeCheckBox","event","target","checked","handleSubmit","variables","id","cungVi","chinhTinhs","WhereUniqueInput","phuTinhs","concat","data","error","push","alertClose","reason","classes","vertical","horizontal"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { TextField, InputAdornment, Typography } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function createKetQuas({ laSoTuVi, onCreate }) {\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n\n  //\n  const [loading, setLoading] = useState(false);\n  // alert\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  // autocomplete\n  const [autocomplete, setAuto] = useState(true);\n  const [autoEnable, setAutoEnable] = useState(false);\n  // autocomplete = true data from \"laSoTuVi\"\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false data from child state\n  const [C, setC] = useState();\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState([]);\n  const [PT, setPT] = useState([]);\n  const [PTT1, setPTT1] = useState([]);\n  const [PTT2, setPTT2] = useState([]);\n  const [PTXC, setPTXC] = useState([]);\n\n  useEffect(() => {\n    setAutoEnable(Boolean(laSoTuVi));\n  });\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: { id: C?.id },\n      cungVi: { id: CV?.id },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(\n        PT.concat(PTT1)\n          .concat(PTT2)\n          .concat(PTXC)\n      ),\n    };\n    try {\n      const { data } = await createKetQua({\n        variables,\n      });\n      onCreate(data?.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Khách hàng\"\n        />\n        <TextField fullWidth variant=\"outlined\" size=\"small\" label=\"Sản phẩm\" />\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={alertOpen}\n        onClose={alertClose}\n        autoHideDuration={3000}\n        message={alertMessage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/loaloa/app/components/users/loginForm.js\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { request } from \"graphql-request\";\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport Link from \"../../src/Link\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  var _jsx, _jsx2;\n\n  var _useState = useState(\"\"),\n      username = _useState[0],\n      setUserName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"Đăng nhập\"),\n      buttonStatus = _useState3[0],\n      setButtonStatus = _useState3[1];\n\n  function loginButtonClick() {\n    var response, authenticateUserWithPassword, token, _authenticateUserWith, id, email;\n\n    return _regeneratorRuntime.async(function loginButtonClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setButtonStatus(\"Vui lòng đợi...\");\n\n            if (!(username.length > 5 && password.length > 5)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(request(getGraphUri(), \"mutation($username: String, $password: String) {\\n      authenticateUserWithPassword(email: $username, password: $password) {\\n      token\\n      item {\\n          id\\n          email\\n      }\\n      }}\", {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            response = _context.sent;\n            authenticateUserWithPassword = response.authenticateUserWithPassword;\n\n            if (authenticateUserWithPassword) {\n              token = authenticateUserWithPassword.token, _authenticateUserWith = authenticateUserWithPassword.item, id = _authenticateUserWith.id, email = _authenticateUserWith.email;\n              setButtonStatus(\"Đang điều hướng...!\");\n              login({\n                token: token,\n                id: id,\n                email: email\n              });\n            } else {\n              setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n            }\n\n            _context.next = 10;\n            break;\n\n          case 9:\n            setButtonStatus(\"Kiểm tra và thử lại\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Grid, (_jsx = {\n    item: true,\n    sm: 12\n  }, _defineProperty(_jsx, \"sm\", 5), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  }), _defineProperty(_jsx, \"__self\", this), _jsx), __jsx(\"img\", {\n    src: \"/img/logo.png\",\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(Grid, (_jsx2 = {\n    item: true,\n    sm: 12\n  }, _defineProperty(_jsx2, \"sm\", 7), _defineProperty(_jsx2, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  }), _defineProperty(_jsx2, \"__self\", this), _jsx2), __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: function onChange(e) {\n      setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    onClick: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(loginButtonClick());\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, buttonStatus)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng k\\xFD\")))))));\n}","map":{"version":3,"sources":["/home/truongduchuy910/apps/loaloa/app/components/users/loginForm.js"],"names":["Grid","TextField","Button","useState","React","request","login","Layout","Link","getGraphUri","loginForm","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","response","authenticateUserWithPassword","token","item","id","email","width","e","target","value"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { request } from \"graphql-request\";\n\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport Link from \"../../src/Link\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let [username, setUserName] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(\n        getGraphUri(),\n        `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n      }\n      }}`,\n        {\n          username,\n          password,\n        }\n      );\n\n      let { authenticateUserWithPassword } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email },\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({ token, id, email });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <Layout>\n      <Grid container justify=\"center\">\n        <Grid item sm={12} sm={5}>\n          <img src=\"/img/logo.png\" style={{ width: \"100%\" }} />\n        </Grid>\n        <Grid item sm={12} sm={7}>\n          <form noValidate autoComplete=\"on\">\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  variant=\"outlined\"\n                  id=\"username\"\n                  label=\"Tên đăng nhập\"\n                  onChange={(e) => {\n                    setUserName(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  variant=\"outlined\"\n                  id=\"password\"\n                  label=\"Mật khẩu\"\n                  type=\"password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  onClick={async () => await loginButtonClick()}\n                >\n                  {buttonStatus}\n                </Button>\n              </Grid>\n\n              <Grid item xs={12}>\n                <Link href=\"/signup\">Đăng ký</Link>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
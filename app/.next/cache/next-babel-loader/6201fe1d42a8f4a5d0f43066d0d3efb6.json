{"ast":null,"code":"var _jsxFileName = \"/home/truongduchuy910/apps/loaloa/app/components/users/loginForm.js\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { request } from \"graphql-request\";\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport Link from \"../../src/Link\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let {\n    0: username,\n    1: setUserName\n  } = useState(\"\");\n  let {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  let {\n    0: buttonStatus,\n    1: setButtonStatus\n  } = useState(\"Đăng nhập\");\n\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(getGraphUri(), `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n      }\n      }}`, {\n        username,\n        password\n      });\n      let {\n        authenticateUserWithPassword\n      } = response;\n\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: {\n            id,\n            email\n          }\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({\n          token,\n          id,\n          email\n        });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      height: \"95vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 1,\n    style: {\n      padding: 21,\n      borderRadius: 13\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    sm: 11,\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/img/logo.png\",\n    style: {\n      width: \"80%\",\n      maxWidth: 250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    sm: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Divider, {\n    style: {\n      height: 100,\n      width: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    sm: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"username\",\n    label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(TextField, {\n    size: \"small\",\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: async () => await loginButtonClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, buttonStatus)))))))));\n}","map":{"version":3,"sources":["/home/truongduchuy910/apps/loaloa/app/components/users/loginForm.js"],"names":["Grid","TextField","Button","Paper","Divider","useState","React","request","login","Layout","Link","getGraphUri","loginForm","username","setUserName","password","setPassword","buttonStatus","setButtonStatus","loginButtonClick","length","response","authenticateUserWithPassword","token","item","id","email","height","padding","borderRadius","width","maxWidth","e","target","value"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { request } from \"graphql-request\";\n\nimport { login } from \"../../utils/auth\";\nimport Layout from \"../../src/Layout\";\nimport Link from \"../../src/Link\";\nimport getGraphUri from \"../../utils/getGraphUri\";\nexport default function loginForm() {\n  let [username, setUserName] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [buttonStatus, setButtonStatus] = useState(\"Đăng nhập\");\n  async function loginButtonClick() {\n    setButtonStatus(\"Vui lòng đợi...\");\n    if (username.length > 5 && password.length > 5) {\n      let response = await request(\n        getGraphUri(),\n        `mutation($username: String, $password: String) {\n      authenticateUserWithPassword(email: $username, password: $password) {\n      token\n      item {\n          id\n          email\n      }\n      }}`,\n        {\n          username,\n          password,\n        }\n      );\n\n      let { authenticateUserWithPassword } = response;\n      if (authenticateUserWithPassword) {\n        let {\n          token,\n          item: { id, email },\n        } = authenticateUserWithPassword;\n        setButtonStatus(\"Đang điều hướng...!\");\n        login({ token, id, email });\n      } else {\n        setButtonStatus(\"Sai tên đăng nhập hoặc mật khẩu.\");\n      }\n    } else {\n      setButtonStatus(\"Kiểm tra và thử lại\");\n    }\n  }\n  return (\n    <Layout>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: \"95vh\" }}\n      >\n        <Paper elevation={1} style={{ padding: 21, borderRadius: 13 }}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item sm={11} sm={5}>\n              <img\n                src=\"/img/logo.png\"\n                style={{ width: \"80%\", maxWidth: 250 }}\n              />\n            </Grid>\n            <Grid item xs={1} sm={1}>\n              <Divider style={{ height: 100, width: 1 }} />\n            </Grid>\n            <Grid item sm={12} sm={6}>\n              <form noValidate autoComplete=\"on\">\n                <Grid container justify=\"center\" spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"username\"\n                      label=\"Tên đăng nhập\"\n                      onChange={(e) => {\n                        setUserName(e.target.value);\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"password\"\n                      label=\"Mật khẩu\"\n                      type=\"password\"\n                      onChange={(e) => {\n                        setPassword(e.target.value);\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button\n                      fullWidth\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={async () => await loginButtonClick()}\n                    >\n                      {buttonStatus}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
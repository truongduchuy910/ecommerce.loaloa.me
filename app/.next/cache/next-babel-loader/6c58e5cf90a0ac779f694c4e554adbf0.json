{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/createOrder.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { TextField, InputAdornment, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport default function createKetQuas({\n  laSoTuVi,\n  onCreate\n}) {\n  const {\n    0: allProducts,\n    1: setAllProducts\n  } = useState([]);\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter(); //\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false); // alert\n\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\"); // autocomplete\n\n  const {\n    0: autocomplete,\n    1: setAuto\n  } = useState(true);\n  const {\n    0: autoEnable,\n    1: setAutoEnable\n  } = useState(false); // autocomplete = true data from \"laSoTuVi\"\n\n  const {\n    0: DX,\n    1: setDX\n  } = useState();\n  const {\n    0: T1,\n    1: setT1\n  } = useState();\n  const {\n    0: T2,\n    1: setT2\n  } = useState();\n  const {\n    0: XC,\n    1: setXC\n  } = useState(); // // autocomplete = false data from child state\n\n  const {\n    0: C,\n    1: setC\n  } = useState();\n  const {\n    0: CV,\n    1: setCV\n  } = useState();\n  const {\n    0: CT,\n    1: setCT\n  } = useState([]);\n  const {\n    0: PT,\n    1: setPT\n  } = useState([]);\n  const {\n    0: PTT1,\n    1: setPTT1\n  } = useState([]);\n  const {\n    0: PTT2,\n    1: setPTT2\n  } = useState([]);\n  const {\n    0: PTXC,\n    1: setPTXC\n  } = useState([]);\n  useEffect(() => {\n    setAutoEnable(Boolean(laSoTuVi));\n  });\n\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let {\n        DX,\n        T1,\n        T2,\n        XC\n      } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: {\n        id: C === null || C === void 0 ? void 0 : C.id\n      },\n      cungVi: {\n        id: CV === null || CV === void 0 ? void 0 : CV.id\n      },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(PT.concat(PTT1).concat(PTT2).concat(PTXC))\n    };\n\n    try {\n      const {\n        data\n      } = await createKetQua({\n        variables\n      });\n      onCreate(data === null || data === void 0 ? void 0 : data.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Kh\\xE1ch h\\xE0ng:\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"Kh\\xE1ch h\\xE0ng\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"\\u0110i\\u1EC7n tho\\u1EA1i\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Danh s\\xE1ch s\\u1EA3n ph\\u1EA9m:\"), __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"H\\xECnh \\u1EA3nh\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"T\\u1ED3n\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Gi\\xE1\"), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Gi\\u1EA3m\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, (allProducts === null || allProducts === void 0 ? void 0 : allProducts.length) ? allProducts.map(product => __jsx(TableRow, {\n    key: product.id,\n    hover: true,\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      maxWidth: \"100%\",\n      maxHeight: 80\n    },\n    src: product.image ? product.image.publicUrl : product.images[0].file.publicUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, product.name), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, product.quantity), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, formatMoney(product.price, 0)), __jsx(TableCell, {\n    align: \"right\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"- \", formatMoney(product.sale, 0), \" \\u0111\")))) : null)))), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"L\\u01B0u\"))), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: alertOpen,\n    onClose: alertClose,\n    autoHideDuration: 3000,\n    message: alertMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/createOrder.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Snackbar","CircularProgress","useState","useEffect","useRouter","gql","useMutation","layCung","getErrorMessage","TextField","InputAdornment","Typography","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","SearchIcon","createKetQuaMutation","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","onCreate","allProducts","setAllProducts","createKetQua","router","loading","setLoading","alertOpen","setAlertOpen","React","alertMessage","setAlertMessage","autocomplete","setAuto","autoEnable","setAutoEnable","DX","setDX","T1","setT1","T2","setT2","XC","setXC","C","setC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","Boolean","handleCungChange","cung","thapNhiCung","handleChangeCheckBox","event","target","checked","handleSubmit","variables","id","cungVi","chinhTinhs","WhereUniqueInput","phuTinhs","concat","data","error","push","alertClose","reason","classes","length","map","product","maxWidth","maxHeight","image","publicUrl","images","file","name","quantity","formatMoney","price","sale","vertical","horizontal"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport { layCung } from \"../lib/laSoAdapter\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { TextField, InputAdornment, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst createKetQuaMutation = gql`\n  mutation(\n    $cung: CungWhereUniqueInput\n    $cungVi: CungViWhereUniqueInput\n    $chinhTinhs: [TinhWhereUniqueInput]\n    $phuTinhs: [PhuTinhWhereUniqueInput]\n  ) {\n    createKetQua(\n      data: {\n        cung: { connect: $cung }\n        cungVi: { connect: $cungVi }\n        chinhTinh: { connect: $chinhTinhs, disconnectAll: true }\n        phuTinh: { connect: $phuTinhs, disconnectAll: true }\n      }\n    ) {\n      id\n      cung {\n        name\n      }\n      loiGiais: ketQua {\n        id\n        cung {\n          name\n        }\n        chinhTinh {\n          id\n          name\n        }\n        phuTinh {\n          id\n          name\n        }\n        giai\n      }\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function createKetQuas({ laSoTuVi, onCreate }) {\n  const [allProducts, setAllProducts] = useState([]);\n  const [createKetQua] = useMutation(createKetQuaMutation);\n  const router = useRouter();\n\n  //\n  const [loading, setLoading] = useState(false);\n  // alert\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = React.useState(\"\");\n  // autocomplete\n  const [autocomplete, setAuto] = useState(true);\n  const [autoEnable, setAutoEnable] = useState(false);\n  // autocomplete = true data from \"laSoTuVi\"\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false data from child state\n  const [C, setC] = useState();\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState([]);\n  const [PT, setPT] = useState([]);\n  const [PTT1, setPTT1] = useState([]);\n  const [PTT2, setPTT2] = useState([]);\n  const [PTXC, setPTXC] = useState([]);\n\n  useEffect(() => {\n    setAutoEnable(Boolean(laSoTuVi));\n  });\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  async function handleSubmit() {\n    setLoading(true);\n    const variables = {\n      cung: { id: C?.id },\n      cungVi: { id: CV?.id },\n      chinhTinhs: WhereUniqueInput(CT),\n      phuTinhs: WhereUniqueInput(\n        PT.concat(PTT1)\n          .concat(PTT2)\n          .concat(PTXC)\n      ),\n    };\n    try {\n      const { data } = await createKetQua({\n        variables,\n      });\n      onCreate(data?.createKetQua);\n      setLoading(false);\n    } catch (error) {\n      setAlertMessage(getErrorMessage(error));\n      setAlertOpen(true);\n      setLoading(false);\n      await router.push(\"/\");\n    }\n  }\n  const alertClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setAlertOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            Khách hàng:\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Khách hàng\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Điện thoại\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Địa chỉ\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            Danh sách sản phẩm:\n          </Typography>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Hình ảnh</TableCell>\n                  <TableCell>Tên</TableCell>\n                  <TableCell align=\"right\">Tồn</TableCell>\n                  <TableCell align=\"right\">Giá</TableCell>\n                  <TableCell align=\"right\">Giảm</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {allProducts?.length\n                  ? allProducts.map((product) => (\n                      <TableRow key={product.id} hover onClick={() => {}}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <img\n                            style={{ maxWidth: \"100%\", maxHeight: 80 }}\n                            src={\n                              product.image\n                                ? product.image.publicUrl\n                                : product.images[0].file.publicUrl\n                            }\n                          />\n                        </TableCell>\n                        <TableCell>{product.name}</TableCell>\n                        <TableCell>{product.quantity}</TableCell>\n                        <TableCell align=\"right\">\n                          {formatMoney(product.price, 0)}\n                        </TableCell>\n                        <TableCell align=\"right\" color=\"textSecondary\">\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            - {formatMoney(product.sale, 0)} đ\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  : null}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" fullWidth>\n            Lưu\n          </Button>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={alertOpen}\n        onClose={alertClose}\n        autoHideDuration={3000}\n        message={alertMessage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
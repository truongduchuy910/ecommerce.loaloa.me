{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/apps/loaloa/app/components/getProduct.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($limit: Int) {\\n    allProducts(first: $limit) {\\n      id\\n      image {\\n        publicUrl\\n      }\\n      images {\\n        file {\\n          publicUrl\\n        }\\n      }\\n      name\\n      price\\n      sale\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment, Button } from \"@material-ui/core\"; //import Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Products from \"./products\";\nvar query = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\nexport default function ProductItem() {\n  var classes = useStyles();\n\n  var _useQuery = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore,\n      refetch = _useQuery.refetch;\n\n  var allProducts = data === null || data === void 0 ? void 0 : data.allProducts;\n  console.log(allProducts);\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"S\\u1ED1 l\\u01B0\\u1EE3ng\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Ghi v\\xE0o h\\xF3a \\u0111\\u01A1n\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Products, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/getProduct.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","Button","formatMoney","gql","useQuery","Products","query","useStyles","theme","root","padding","spacing","marginBottom","ProductItem","classes","variables","limit","data","loading","error","fetchMore","refetch","allProducts","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,cAPF,EAQEC,KARF,EASEC,UATF,EAUEC,KAVF,EAWEC,SAXF,EAYEC,cAZF,EAaEC,MAbF,QAcO,mBAdP,C,CAeA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAMC,KAAK,GAAGH,GAAH,mBAAX;AAkBA,IAAMI,SAAS,GAAGV,UAAU,CAAC,UAACW,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL;AAEJC,MAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFV;AADiC,GAAZ;AAAA,CAAD,CAA5B;AAMA,eAAe,SAASE,WAAT,GAAuB;AACpC,MAAMC,OAAO,GAAGP,SAAS,EAAzB;;AADoC,kBAEeH,QAAQ,CAACE,KAAD,EAAQ;AACjES,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AADsD,GAAR,CAFvB;AAAA,MAE9BC,IAF8B,aAE9BA,IAF8B;AAAA,MAExBC,OAFwB,aAExBA,OAFwB;AAAA,MAEfC,KAFe,aAEfA,KAFe;AAAA,MAERC,SAFQ,aAERA,SAFQ;AAAA,MAEGC,OAFH,aAEGA,OAFH;;AAKpC,MAAIC,WAAW,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,WAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAER,OAAO,CAACL,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,yBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAoBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CApBF,EAyBE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,CADF,CADF;AAiCD","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Button,\n} from \"@material-ui/core\";\n//import Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Products from \"./products\";\nconst query = gql`\n  query($limit: Int) {\n    allProducts(first: $limit) {\n      id\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      name\n      price\n      sale\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\nexport default function ProductItem() {\n  const classes = useStyles();\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allProducts = data?.allProducts;\n  console.log(allProducts);\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Số lượng\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {/* <Autocomplete\n            id=\"combo-box-demo\"\n            options={[{ title: \"1\" }]}\n            getOptionLabel={(option) => option.title}\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\n            )}\n          /> */}\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" fullWidth>\n            Ghi vào hóa đơn\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Products />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
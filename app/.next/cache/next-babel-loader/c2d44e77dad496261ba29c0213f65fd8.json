{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/phuTinhs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layPhuTinhs } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allPhuTinhs {\n      id\n      name\n    }\n  }\n`;\nexport default function phuTinhs({\n  cung,\n  setCung,\n  label,\n  PT,\n  setPT\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query);\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n\n  if ((data === null || data === void 0 ? void 0 : data.allPhuTinhs) && cung) {\n    let ketQua = layPhuTinhs({\n      allPhuTinhs: data.allPhuTinhs,\n      cung\n    }).PT;\n    if (ketQua.length == 0) ketQua.push(\"trong\");\n    setPT(ketQua);\n  }\n\n  return (data === null || data === void 0 ? void 0 : data.allPhuTinhs) && !loading ? __jsx(Autocomplete, {\n    value: PT,\n    onChange: (event, value) => {\n      setPT(value);\n    },\n    multiple: true,\n    size: \"small\",\n    options: data.allPhuTinhs,\n    getOptionLabel: option => {\n      return option ? option.name : {};\n    },\n    filterSelectedOptions: true,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      variant: \"outlined\",\n      label: label ? label : \"Phụ tinh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/phuTinhs.js"],"names":["TextField","Autocomplete","Skeleton","useState","useEffect","useRouter","gql","useQuery","layPhuTinhs","query","phuTinhs","cung","setCung","label","PT","setPT","data","loading","error","shouldRedirect","router","push","allPhuTinhs","ketQua","length","event","value","option","name","params"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,MAAMC,KAAK,GAAGH,GAAI;;;;;;;CAAlB;AAQA,eAAe,SAASI,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,EAAxB;AAA4BC,EAAAA;AAA5B,CAAlB,EAAuD;AACpE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CAACE,KAAD,CAAzC;AAEA,QAAMU,cAAc,GAAG,EAAEF,OAAO,IAAID,IAAb,CAAvB;AACA,QAAMI,MAAM,GAAGf,SAAS,EAAxB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,cAAJ,EAAoB;AAClBC,MAAAA,MAAM,CAACC,IAAP,CAAY,SAAZ;AACD;AACF,GAJQ,EAIN,CAACF,cAAD,CAJM,CAAT;;AAKA,MAAI,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,WAAN,KAAqBX,IAAzB,EAA+B;AAC7B,QAAIY,MAAM,GAAGf,WAAW,CAAC;AAAEc,MAAAA,WAAW,EAAEN,IAAI,CAACM,WAApB;AAAiCX,MAAAA;AAAjC,KAAD,CAAX,CAAqDG,EAAlE;AACA,QAAIS,MAAM,CAACC,MAAP,IAAiB,CAArB,EAAwBD,MAAM,CAACF,IAAP,CAAY,OAAZ;AACxBN,IAAAA,KAAK,CAACQ,MAAD,CAAL;AACD;;AACD,SAAO,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,WAAN,KAAqB,CAACL,OAAtB,GACL,MAAC,YAAD;AACE,IAAA,KAAK,EAAEH,EADT;AAEE,IAAA,QAAQ,EAAE,CAACW,KAAD,EAAQC,KAAR,KAAkB;AAC1BX,MAAAA,KAAK,CAACW,KAAD,CAAL;AACD,KAJH;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,OAAO,EAAEV,IAAI,CAACM,WAPhB;AAQE,IAAA,cAAc,EAAGK,MAAD,IAAY;AAC1B,aAAOA,MAAM,GAAGA,MAAM,CAACC,IAAV,GAAiB,EAA9B;AACD,KAVH;AAWE,IAAA,qBAAqB,MAXvB;AAYE,IAAA,WAAW,EAAGC,MAAD,IACX,MAAC,SAAD,eACMA,MADN;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAEhB,KAAK,GAAGA,KAAH,GAAW,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAsBL,MAAC,QAAD;AAAU,IAAA,OAAO,EAAC,MAAlB;AAAyB,IAAA,MAAM,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF;AAwBD","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layPhuTinhs } from \"../lib/laSoAdapter\";\nconst query = gql`\n  query {\n    allPhuTinhs {\n      id\n      name\n    }\n  }\n`;\nexport default function phuTinhs({ cung, setCung, label, PT, setPT }) {\n  const { data, loading, error } = useQuery(query);\n\n  const shouldRedirect = !(loading || data);\n  const router = useRouter();\n  useEffect(() => {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n  if (data?.allPhuTinhs && cung) {\n    let ketQua = layPhuTinhs({ allPhuTinhs: data.allPhuTinhs, cung }).PT;\n    if (ketQua.length == 0) ketQua.push(\"trong\");\n    setPT(ketQua);\n  }\n  return data?.allPhuTinhs && !loading ? (\n    <Autocomplete\n      value={PT}\n      onChange={(event, value) => {\n        setPT(value);\n      }}\n      multiple\n      size=\"small\"\n      options={data.allPhuTinhs}\n      getOptionLabel={(option) => {\n        return option ? option.name : {};\n      }}\n      filterSelectedOptions\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          label={label ? label : \"Phụ tinh\"}\n        />\n      )}\n    />\n  ) : (\n    <Skeleton variant=\"rect\" height={40} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
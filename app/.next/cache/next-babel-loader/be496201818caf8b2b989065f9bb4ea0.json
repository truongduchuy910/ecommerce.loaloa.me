{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/loaloa/app/components/Customers.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Grid, Typography, TableCell, TableHead, TableRow, TableBody, TableContainer, Table, makeStyles, Paper, TextField, InputAdornment, Button, Fab, Drawer, IconButton, InputBase, Divider, Box } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport CreateCustomer from \"./CreateCustomer\";\nconst query = gql`\n  query($limit: Int) {\n    allCustomers(first: $limit) {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  search: {\n    margin: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: 8,\n    border: \"1px solid #f7f8f9\"\n  },\n  table: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  }\n}));\nexport default function Customer({\n  onClick\n}) {\n  const classes = useStyles();\n  const {\n    0: drawer,\n    1: setDrawer\n  } = useState(false);\n  let {\n    data,\n    loading,\n    error,\n    fetchMore,\n    refetch\n  } = useQuery(query, {\n    variables: {\n      limit: 6\n    }\n  });\n  let allCustomers = data === null || data === void 0 ? void 0 : data.allCustomers;\n\n  function handleClick() {\n    onClick();\n    setDrawer(false);\n  }\n\n  function chooseCustomer({\n    customer\n  }) {\n    onClick({\n      customer\n    });\n    setDrawer(false);\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    size: \"small\",\n    onClick: () => setDrawer(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(Drawer, {\n    open: drawer,\n    onClose: () => setDrawer(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(CreateCustomer, {\n    className: classes.iconButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \" \", __jsx(Divider, {\n    className: classes.divider,\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(InputBase, {\n    className: classes.input,\n    placeholder: \"T\\xECm ki\\u1EBFm\",\n    inputProps: {\n      \"aria-label\": \"Tìm kiếm\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"T\\xEAn\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u0110i\\u1EC7n tho\\u1EA1i\"), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\u0110\\u1ECBa ch\\u1EC9\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, (allCustomers === null || allCustomers === void 0 ? void 0 : allCustomers.length) ? allCustomers.map(customer => __jsx(TableRow, {\n    key: customer.id,\n    hover: true,\n    onClick: () => {\n      chooseCustomer({\n        customer\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, customer.name), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, customer.phone), __jsx(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, customer.address))) : null))))))));\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/Customers.js"],"names":["Grid","Typography","TableCell","TableHead","TableRow","TableBody","TableContainer","Table","makeStyles","Paper","TextField","InputAdornment","Button","Fab","Drawer","IconButton","InputBase","Divider","Box","EditIcon","AddIcon","SearchIcon","formatMoney","gql","useQuery","useState","CreateCustomer","query","useStyles","theme","root","padding","spacing","search","margin","display","alignItems","borderRadius","border","table","divider","height","input","marginLeft","flex","Customer","onClick","classes","drawer","setDrawer","data","loading","error","fetchMore","refetch","variables","limit","allCustomers","handleClick","chooseCustomer","customer","iconButton","length","map","id","name","phone","address"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Table,\n  makeStyles,\n  Paper,\n  TextField,\n  InputAdornment,\n  Button,\n  Fab,\n  Drawer,\n  IconButton,\n  InputBase,\n  Divider,\n  Box,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport CreateCustomer from \"./CreateCustomer\";\nconst query = gql`\n  query($limit: Int) {\n    allCustomers(first: $limit) {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: theme.spacing(2) },\n  search: {\n    margin: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: 8,\n    border: \"1px solid #f7f8f9\",\n  },\n  table: { margin: theme.spacing(2), padding: theme.spacing(2) },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n}));\nexport default function Customer({ onClick }) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n\n  let { data, loading, error, fetchMore, refetch } = useQuery(query, {\n    variables: { limit: 6 },\n  });\n  let allCustomers = data?.allCustomers;\n  function handleClick() {\n    onClick();\n    setDrawer(false);\n  }\n  function chooseCustomer({ customer }) {\n    onClick({ customer });\n    setDrawer(false);\n  }\n  return (\n    <React.Fragment>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        size=\"small\"\n        onClick={() => setDrawer(true)}\n      >\n        <EditIcon />\n      </Fab>\n      <Drawer open={drawer} onClose={() => setDrawer(false)}>\n        <Paper className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Box className={classes.search}>\n                <CreateCustomer className={classes.iconButton} />{\" \"}\n                <Divider className={classes.divider} orientation=\"vertical\" />\n                <InputBase\n                  className={classes.input}\n                  placeholder=\"Tìm kiếm\"\n                  inputProps={{ \"aria-label\": \"Tìm kiếm\" }}\n                />\n              </Box>\n            </Grid>\n\n            <Grid item xs={12}>\n              <TableContainer>\n                <Table aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Tên</TableCell>\n                      <TableCell>Điện thoại</TableCell>\n                      <TableCell>Địa chỉ</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {allCustomers?.length\n                      ? allCustomers.map((customer) => (\n                          <TableRow\n                            key={customer.id}\n                            hover\n                            onClick={() => {\n                              chooseCustomer({ customer });\n                            }}\n                          >\n                            <TableCell component=\"th\" scope=\"row\">\n                              {customer.name}\n                            </TableCell>\n                            <TableCell>{customer.phone}</TableCell>\n                            <TableCell>{customer.address}</TableCell>\n                          </TableRow>\n                        ))\n                      : null}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Drawer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/apps/loaloa/app/components/Order.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!, $step: Int) {\\n    updateOrder(id: $id, data: { step: $step }) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Paper, Stepper, StepLabel, Typography, Link, Step, Button } from \"@material-ui/core\";\nimport Customer from \"./Customer\";\nimport OrderItem from \"./orderItem\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { useState } from \"react\";\nvar steps = [\"Đặt\", \"Xử lí\", \"Giao\", \"Thanh toán\"];\nvar updateStepQuery = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    btn: {\n      marginTop: theme.spacing(2)\n    }\n  };\n});\nexport default function Order(_ref) {\n  var order = _ref.order,\n      nextStep = _ref.nextStep;\n  var classes = useStyles();\n\n  var _useMutation = useMutation(updateStepQuery),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateStep = _useMutation2[0];\n\n  var _useState = useState(),\n      errorMsg = _useState[0],\n      setErrorMsg = _useState[1];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  function handleNext(_ref2) {\n    var id, step, _ref3, data;\n\n    return _regeneratorRuntime.async(function handleNext$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _ref2.id, step = _ref2.step;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(updateStep({\n              variables: {\n                id: id,\n                step: step\n              }\n            }));\n\n          case 4:\n            _ref3 = _context.sent;\n            data = _ref3.data;\n            nextStep();\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setErrorMsg(getErrorMessage(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]]);\n  }\n\n  return __jsx(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Stepper, {\n    activeStep: order === null || order === void 0 ? void 0 : order.step,\n    alternativeLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, steps.map(function (label) {\n    return __jsx(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(StepLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, label));\n  })), __jsx(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\u0110\\u01A1n:\"), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"C\\u1EADp nh\\u1EADt l\\xFAc:\", \" \", __jsx(Link, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, new Date(order === null || order === void 0 ? void 0 : order.time).toLocaleString(\"tr-TR\"))), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Id: \", __jsx(Link, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"#\", order === null || order === void 0 ? void 0 : order.id)), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"T\\u1ED5ng: \", __jsx(Link, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, formatMoney(order === null || order === void 0 ? void 0 : order.total, 0))), __jsx(Customer, {\n    customer: order === null || order === void 0 ? void 0 : order.customer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(OrderItem, {\n    items: order === null || order === void 0 ? void 0 : order.items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), order.step < 4 ? __jsx(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.btn,\n    onClick: function onClick() {\n      return handleNext({\n        id: order.id,\n        step: order.step + 1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u0110\\xE3 \", steps[order.step], \" xong\") : null);\n}","map":{"version":3,"sources":["/home/huy/apps/loaloa/app/components/Order.js"],"names":["makeStyles","Paper","Stepper","StepLabel","Typography","Link","Step","Button","Customer","OrderItem","formatMoney","gql","useMutation","getErrorMessage","useState","steps","updateStepQuery","useStyles","theme","root","padding","spacing","marginBottom","btn","marginTop","Order","order","nextStep","classes","updateStep","errorMsg","setErrorMsg","React","activeStep","setActiveStep","handleNext","id","step","variables","data","map","label","Date","time","toLocaleString","total","customer","items"],"mappings":"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","sourcesContent":["import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {\n  Paper,\n  Stepper,\n  StepLabel,\n  Typography,\n  Link,\n  Step,\n  Button,\n} from \"@material-ui/core\";\nimport Customer from \"./Customer\";\nimport OrderItem from \"./orderItem\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { getErrorMessage } from \"../lib/form\";\nimport { useState } from \"react\";\nconst steps = [\"Đặt\", \"Xử lí\", \"Giao\", \"Thanh toán\"];\nconst updateStepQuery = gql`\n  mutation($id: ID!, $step: Int) {\n    updateOrder(id: $id, data: { step: $step }) {\n      id\n    }\n  }\n`;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  btn: { marginTop: theme.spacing(2) },\n}));\nexport default function Order({ order, nextStep }) {\n  const classes = useStyles();\n  const [updateStep] = useMutation(updateStepQuery);\n  const [errorMsg, setErrorMsg] = useState();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  async function handleNext({ id, step }) {\n    try {\n      const { data } = await updateStep({ variables: { id, step } });\n      nextStep();\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n  return (\n    <Paper className={classes.root}>\n      <Stepper activeStep={order?.step} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Typography variant=\"body1\">Đơn:</Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        Cập nhật lúc:{\" \"}\n        <Link color=\"primary\">\n          {new Date(order?.time).toLocaleString(\"tr-TR\")}\n        </Link>\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        Id: <Link color=\"primary\">#{order?.id}</Link>\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        Tổng: <Link color=\"primary\">{formatMoney(order?.total, 0)}</Link>\n      </Typography>\n      <Customer customer={order?.customer} />\n      <OrderItem items={order?.items} />\n      {order.step < 4 ? (\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.btn}\n          onClick={() => handleNext({ id: order.id, step: order.step + 1 })}\n        >\n          Đã {steps[order.step]} xong\n        </Button>\n      ) : null}\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    allPhuTinhs {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { layPhuTinhs } from \"../lib/laSoAdapter\";\nvar query = gql(_templateObject());\nexport default function phuTinhs(_ref) {\n  var cung = _ref.cung,\n      label = _ref.label,\n      autocomplete = _ref.autocomplete;\n\n  var _useQuery = useQuery(query),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var shouldRedirect = !(loading || data);\n  var router = useRouter();\n  useEffect(function () {\n    if (shouldRedirect) {\n      router.push(\"/signin\");\n    }\n  }, [shouldRedirect]);\n  var PT;\n\n  if ((data === null || data === void 0 ? void 0 : data.allPhuTinhs) && cung && autocomplete) {\n    PT = layPhuTinhs({\n      allPhuTinhs: data.allPhuTinhs,\n      cung: cung\n    }).PT;\n  }\n\n  return (data === null || data === void 0 ? void 0 : data.allPhuTinhs) && !loading ? __jsx(Autocomplete, {\n    value: PT || {},\n    multiple: true,\n    size: \"small\",\n    options: data.allPhuTinhs,\n    getOptionLabel: function getOptionLabel(option) {\n      return option ? option.name : {};\n    },\n    filterSelectedOptions: true,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"outlined\",\n        label: label ? label : \"Phá»¥ tinh\"\n      }));\n    }\n  }) : __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 40\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
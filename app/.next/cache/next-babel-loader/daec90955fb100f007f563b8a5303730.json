{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/huy/apps/tuvilogic/app/components/createKetQua.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(1),\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\n\nvar createKetQuas = function createKetQuas(_ref) {\n  _s();\n\n  var laSoTuVi = _ref.laSoTuVi,\n      data = _ref.data,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState(false),\n      autocomplete = _useState[0],\n      setAuto = _useState[1]; // auto fill\n\n\n  var _useState2 = useState(false),\n      autoFill = _useState2[0],\n      setAutoFill = _useState2[1]; // autocomplete = true data from laSoTuVi\n\n\n  var _useState3 = useState(),\n      DX = _useState3[0],\n      setDX = _useState3[1];\n\n  var _useState4 = useState(),\n      T1 = _useState4[0],\n      setT1 = _useState4[1];\n\n  var _useState5 = useState(),\n      T2 = _useState5[0],\n      setT2 = _useState5[1];\n\n  var _useState6 = useState(),\n      XC = _useState6[0],\n      setXC = _useState6[1]; // // autocomplete = false data from data\n\n\n  var _useState7 = useState(),\n      C = _useState7[0],\n      setC = _useState7[1];\n\n  var _useState8 = useState(),\n      CV = _useState8[0],\n      setCV = _useState8[1];\n\n  var _useState9 = useState([]),\n      CT = _useState9[0],\n      setCT = _useState9[1];\n\n  var _useState10 = useState([]),\n      PT = _useState10[0],\n      setPT = _useState10[1];\n\n  var _useState11 = useState([]),\n      PTT1 = _useState11[0],\n      setPTT1 = _useState11[1];\n\n  var _useState12 = useState([]),\n      PTT2 = _useState12[0],\n      setPTT2 = _useState12[1];\n\n  var _useState13 = useState([]),\n      PTXC = _useState13[0],\n      setPTXC = _useState13[1];\n\n  useEffect(function () {});\n\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      var _layCung = layCung({\n        cung: cung,\n        thapNhiCung: laSoTuVi.thapNhiCung\n      }),\n          _DX = _layCung.DX,\n          _T = _layCung.T1,\n          _T2 = _layCung.T2,\n          _XC = _layCung.XC;\n\n      console.log(_DX);\n      setDX(_DX);\n      setT1(_T);\n      setT2(_T2);\n      setXC(_XC);\n    }\n  }\n\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n\n  function handleSubmit() {\n    var variables = {\n      cung: C === null || C === void 0 ? void 0 : C.id,\n      cungVi: CV === null || CV === void 0 ? void 0 : CV.id,\n      chinhTinhs: onlyId(CT),\n      phuTinhs: onlyId(PT)\n    };\n    console.log(variables);\n  }\n\n  var classes = useStyles();\n  return __jsx(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Cung, {\n    onChange: handleCungChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(CungVi, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CV: CV,\n    setCV: setCV,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(AllChinhTinhs, {\n    cung: autocomplete ? DX : false,\n    setCung: setDX,\n    CT: CT,\n    setCT: setCT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    cung: DX,\n    setCung: setDX,\n    PT: PT,\n    setPT: setPT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T1 ? \"Tam hợp \" + T1.cungChu : false,\n    cung: autocomplete ? T1 : false,\n    setCung: setT1,\n    PT: PTT1,\n    setPT: setPTT1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: T2 ? \"Tam hợp \" + T2.cungChu : false,\n    cung: autocomplete ? T2 : false,\n    setCung: setT2,\n    PT: PTT2,\n    setPT: setPTT2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(AllPhuTinhs, {\n    label: XC ? \"Xung chiếu \" + XC.cungChu : false,\n    cung: autocomplete ? XC : false,\n    setCung: setXC,\n    PT: PTXC,\n    setPT: setPTXC,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: autocomplete,\n      onChange: handleChangeCheckBox,\n      name: \"checkedB\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }),\n    label: \"T\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC1n t\\u1EEB l\\xE1 s\\xF4?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Xem K\\u1EBFt Qu\\u1EA3\"))));\n};\n\n_s(createKetQuas, \"CnrztzJE3WCAbsvlPC7TATgT1Fo=\", false, function () {\n  return [useStyles];\n});\n\nexport default createKetQuas;\n\nfunction onlyId(array) {\n  if (!array) return [];\n  var result = [];\n  array.map(function (item) {\n    return result.push(item.id);\n  });\n  return result;\n}","map":{"version":3,"sources":["/home/huy/apps/tuvilogic/app/components/createKetQua.js"],"names":["Grid","Paper","makeStyles","Button","FormControlLabel","Checkbox","Cung","CungVi","AllChinhTinhs","AllPhuTinhs","useState","useEffect","layCung","useStyles","theme","root","padding","spacing","marginBottom","createKetQuas","laSoTuVi","data","onSubmit","autocomplete","setAuto","autoFill","setAutoFill","DX","setDX","T1","setT1","T2","setT2","XC","setXC","C","setC","CV","setCV","CT","setCT","PT","setPT","PTT1","setPTT1","PTT2","setPTT2","PTXC","setPTXC","handleCungChange","cung","thapNhiCung","console","log","handleChangeCheckBox","event","target","checked","handleSubmit","variables","id","cungVi","chinhTinhs","onlyId","phuTinhs","classes","cungChu","array","result","map","item","push"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Cung from \"./cung\";\nimport CungVi from \"./cungVi\";\nimport AllChinhTinhs from \"./chinhTinhs\";\nimport AllPhuTinhs from \"./phuTinhs\";\nimport { useState, useEffect } from \"react\";\nimport { layCung } from \"../lib/laSoAdapter\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n}));\nconst createKetQuas = ({ laSoTuVi, data, onSubmit }) => {\n  const [autocomplete, setAuto] = useState(false);\n\n  // auto fill\n  const [autoFill, setAutoFill] = useState(false);\n  // autocomplete = true data from laSoTuVi\n  const [DX, setDX] = useState();\n  const [T1, setT1] = useState();\n  const [T2, setT2] = useState();\n  const [XC, setXC] = useState();\n  // // autocomplete = false data from data\n  const [C, setC] = useState();\n  const [CV, setCV] = useState();\n  const [CT, setCT] = useState([]);\n  const [PT, setPT] = useState([]);\n  const [PTT1, setPTT1] = useState([]);\n  const [PTT2, setPTT2] = useState([]);\n  const [PTXC, setPTXC] = useState([]);\n\n  useEffect(() => {});\n  function handleCungChange(cung) {\n    setC(cung);\n\n    if (cung && laSoTuVi && autocomplete) {\n      let { DX, T1, T2, XC } = layCung({\n        cung,\n        thapNhiCung: laSoTuVi.thapNhiCung,\n      });\n      console.log(DX);\n      setDX(DX);\n      setT1(T1);\n      setT2(T2);\n      setXC(XC);\n    }\n  }\n  function handleChangeCheckBox(event) {\n    setAuto(event.target.checked);\n  }\n  function handleSubmit() {\n    let variables = {\n      cung: C?.id,\n      cungVi: CV?.id,\n      chinhTinhs: onlyId(CT),\n      phuTinhs: onlyId(PT),\n    };\n    console.log(variables);\n  }\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Cung onChange={handleCungChange} />\n        </Grid>\n        <Grid item xs={12}>\n          <CungVi\n            cung={autocomplete ? DX : false}\n            setCung={setDX}\n            CV={CV}\n            setCV={setCV}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllChinhTinhs\n            cung={autocomplete ? DX : false}\n            setCung={setDX}\n            CT={CT}\n            setCT={setCT}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs cung={DX} setCung={setDX} PT={PT} setPT={setPT} />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T1 ? \"Tam hợp \" + T1.cungChu : false}\n            cung={autocomplete ? T1 : false}\n            setCung={setT1}\n            PT={PTT1}\n            setPT={setPTT1}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={T2 ? \"Tam hợp \" + T2.cungChu : false}\n            cung={autocomplete ? T2 : false}\n            setCung={setT2}\n            PT={PTT2}\n            setPT={setPTT2}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AllPhuTinhs\n            label={XC ? \"Xung chiếu \" + XC.cungChu : false}\n            cung={autocomplete ? XC : false}\n            setCung={setXC}\n            PT={PTXC}\n            setPT={setPTXC}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={autocomplete}\n                onChange={handleChangeCheckBox}\n                name=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Tự động điền từ lá sô?\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={handleSubmit}\n          >\n            Xem Kết Quả\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\nexport default createKetQuas;\nfunction onlyId(array) {\n  if (!array) return [];\n  let result = [];\n  array.map((item) => result.push(item.id));\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}